{"id": 637, "total": 770, "progress": 34, "left": [{"dataset": "human", "model": "1", "description": "Reverse list `x`", "snippet": "x [ : : - 1 ] ", "index": 51}, {"dataset": "human", "model": "2", "description": "Reverse list `x`", "snippet": "x . reverse ( ) ", "index": 51}, {"dataset": "django", "model": "retrieval", "description": "Reverse list `x`", "snippet": "parts . reverse ( )", "index": 51}, {"dataset": "docstring", "model": "retrieval", "description": "Reverse list `x`", "snippet": "DCSP r = '' . join ( reversed ( s ) ) DCNL DCSP return r", "index": 51}, {"dataset": "conala", "model": "retrieval", "description": "Reverse list `x`", "snippet": "s [ : : ( - 1 ) ]", "index": 51}, {"dataset": "synthetic", "model": "retrieval", "description": "Reverse list `x`", "snippet": "LIST_0 [ : : - 1 ]", "index": 51}, {"dataset": "django", "model": "nmt", "description": "Reverse list `x`", "snippet": "if <unk> :", "index": 51}, {"dataset": "docstring", "model": "nmt", "description": "Reverse list `x`", "snippet": "DCSP return [ x for x in x if x ]", "index": 51}, {"dataset": "conala", "model": "nmt", "description": "Reverse list `x`", "snippet": "[ [ ] for n in x ]", "index": 51}, {"dataset": "synthetic", "model": "nmt", "description": "Reverse list `x`", "snippet": "np . zeros ( TUPLE_0 )", "index": 51}, {"dataset": "django", "model": "seekNMT", "description": "Reverse list `x`", "snippet": "deps", "index": 51}, {"dataset": "docstring", "model": "seekNMT", "description": "Reverse list `x`", "snippet": "DCSP return sum ( ( x for x in x if isinstance ( x , int ) else x ) )", "index": 51}, {"dataset": "conala", "model": "seekNMT", "description": "Reverse list `x`", "snippet": "x [ : ]", "index": 51}, {"dataset": "synthetic", "model": "seekNMT", "description": "Reverse list `x`", "snippet": "LIST_0 [ : - 1 ]", "index": 51}, {"dataset": "human", "model": "1", "description": "Trimming \\n from string `myString`", "snippet": "myString . strip ( '\\n' ) ", "index": 53}, {"dataset": "human", "model": "2", "description": "Trimming \\n from string `myString`", "snippet": "myString . replace ( '\\n' , '' ) ", "index": 53}, {"dataset": "django", "model": "retrieval", "description": "Trimming \\n from string `myString`", "snippet": "return '0'", "index": 53}, {"dataset": "docstring", "model": "retrieval", "description": "Trimming \\n from string `myString`", "snippet": "DCSP return trimr ( data , limits = ( proportiontocut , proportiontocut ) , inclusive = inclusive , axis = axis )", "index": 53}, {"dataset": "conala", "model": "retrieval", "description": "Trimming \\n from string `myString`", "snippet": "myString . rstrip ( '\\n\\t' )", "index": 53}, {"dataset": "synthetic", "model": "retrieval", "description": "Trimming \\n from string `myString`", "snippet": "LIST_0 . remove ( STRING_0 ) DCNL STRING_0 . join ( LIST_0 )", "index": 53}, {"dataset": "django", "model": "nmt", "description": "Trimming \\n from string `myString`", "snippet": "while <unk> in ( <unk> , <unk> , <unk> ) :", "index": 53}, {"dataset": "docstring", "model": "nmt", "description": "Trimming \\n from string `myString`", "snippet": "DCSP lines = [ ] DCNL DCSP lines = lines . split ( '\\n' ) DCNL DCSP for line in lines : DCNL DCSP", "index": 53}, {"dataset": "conala", "model": "nmt", "description": "Trimming \\n from string `myString`", "snippet": "re . strip ( name , '/' )", "index": 53}, {"dataset": "synthetic", "model": "nmt", "description": "Trimming \\n from string `myString`", "snippet": "\\\\u003Cp\\\\u003E . decode ( 'unicode-escape' )", "index": 53}, {"dataset": "django", "model": "seekNMT", "description": "Trimming \\n from string `myString`", "snippet": "patterns", "index": 53}, {"dataset": "docstring", "model": "seekNMT", "description": "Trimming \\n from string `myString`", "snippet": "DCSP return <unk> ( string , <unk> )", "index": 53}, {"dataset": "conala", "model": "seekNMT", "description": "Trimming \\n from string `myString`", "snippet": "line ) DCNL except ValueError : DCNL DCSP DCSP pass", "index": 53}, {"dataset": "synthetic", "model": "seekNMT", "description": "Trimming \\n from string `myString`", "snippet": "STRING_0 . split ( )", "index": 53}, {"dataset": "human", "model": "1", "description": "add key value to dictionary", "snippet": "d [ key ] = value ", "index": 44}, {"dataset": "human", "model": "2", "description": "add key value to dictionary", "snippet": "dictionary [ \"key\" ] = value ", "index": 44}, {"dataset": "django", "model": "retrieval", "description": "add key value to dictionary", "snippet": "self . bad_cookies . add ( key )", "index": 44}, {"dataset": "docstring", "model": "retrieval", "description": "add key value to dictionary", "snippet": "DCSP if ( key in dictionary ) : DCNL DCSP DCSP dictionary [ key ] . append ( value ) DCNL DCSP else : DCNL DCSP DCSP dictionary [ key ] = [ value ]", "index": 44}, {"dataset": "conala", "model": "retrieval", "description": "add key value to dictionary", "snippet": "data . update ( { 'a' : 1 , } )", "index": 44}, {"dataset": "synthetic", "model": "retrieval", "description": "add key value to dictionary", "snippet": "VARIABLE_0 + datetime . datetime . timedelta ( days = 7 )", "index": 44}, {"dataset": "django", "model": "nmt", "description": "add key value to dictionary", "snippet": "value += dict [ key ]", "index": 44}, {"dataset": "docstring", "model": "nmt", "description": "add key value to dictionary", "snippet": "DCSP if ( key in dictionary ) : DCNL DCSP DCSP key = key [ key ] DCNL DCSP DCSP key = key [", "index": 44}, {"dataset": "conala", "model": "nmt", "description": "add key value to dictionary", "snippet": "( key , dict )", "index": 44}, {"dataset": "synthetic", "model": "nmt", "description": "add key value to dictionary", "snippet": "update ( DICT_0 for key , sum ( VARIABLE_1 ) )", "index": 44}, {"dataset": "django", "model": "seekNMT", "description": "add key value to dictionary", "snippet": "values = set ( value )", "index": 44}, {"dataset": "docstring", "model": "seekNMT", "description": "add key value to dictionary", "snippet": "DCSP value = value . replace ( value , '' ) DCNL DCSP value = value . replace ( value , '' ) DCNL", "index": 44}, {"dataset": "conala", "model": "seekNMT", "description": "add key value to dictionary", "snippet": "new_list = 0 == 0", "index": 44}, {"dataset": "synthetic", "model": "seekNMT", "description": "add key value to dictionary", "snippet": "result = datetime . datetime . now ( ) DCNL result = ( now - VARIABLE_0 ) . total_seconds ( )", "index": 44}, {"dataset": "human", "model": "1", "description": "append an element to a list", "snippet": "elem_list . append ( elem ) ", "index": 12}, {"dataset": "human", "model": "2", "description": "append an element to a list", "snippet": "list . append ( variable ) ", "index": 12}, {"dataset": "django", "model": "retrieval", "description": "append an element to a list", "snippet": "not_found . append ( e . args [ 0 ] )", "index": 12}, {"dataset": "docstring", "model": "retrieval", "description": "append an element to a list", "snippet": "DCSP if ( ( append is not None ) and ( element is not None ) ) : DCNL DCSP DCSP if ( isinstance ( element , list ) or isinstance ( element , tuple ) ) : DCNL DCSP DCSP DCSP append . extend ( element ) DCNL DCSP DCSP else : DCNL DCSP DCSP DCSP append . append ( element ) DCNL DCSP else : DCNL DCSP DCSP return element", "index": 12}, {"dataset": "conala", "model": "retrieval", "description": "append an element to a list", "snippet": "c . extend ( a )", "index": 12}, {"dataset": "synthetic", "model": "retrieval", "description": "append an element to a list", "snippet": "LIST_0 . append ( STRING_0 )", "index": 12}, {"dataset": "django", "model": "nmt", "description": "append an element to a list", "snippet": "self . cc . append ( [ ] )", "index": 12}, {"dataset": "docstring", "model": "nmt", "description": "append an element to a list", "snippet": "DCSP return <unk> ( element , key , value )", "index": 12}, {"dataset": "conala", "model": "nmt", "description": "append an element to a list", "snippet": "[ '' for ( i , x ) in mylog ]", "index": 12}, {"dataset": "synthetic", "model": "nmt", "description": "append an element to a list", "snippet": "list ( + + + + + + + + + VARIABLE_0 ) )", "index": 12}, {"dataset": "django", "model": "seekNMT", "description": "append an element to a list", "snippet": "lines ]", "index": 12}, {"dataset": "docstring", "model": "seekNMT", "description": "append an element to a list", "snippet": "DCSP return element . element ( element )", "index": 12}, {"dataset": "conala", "model": "seekNMT", "description": "append an element to a list", "snippet": "del dict ( d )", "index": 12}, {"dataset": "synthetic", "model": "seekNMT", "description": "append an element to a list", "snippet": "LIST_0 . remove ( STRING_0 )", "index": 12}, {"dataset": "human", "model": "1", "description": "binary to string", "snippet": "b'a string' . decode ( 'ascii' ) ", "index": 31}, {"dataset": "human", "model": "2", "description": "binary to string", "snippet": "binary_string . decode ( ) ", "index": 31}, {"dataset": "django", "model": "retrieval", "description": "binary to string", "snippet": "fd = os . open ( new_file_name , ( os . O_WRONLY | os . O_CREAT | getattr ( os , 'O_BINARY' , 0 ) | ( os . O_EXCL if not allow_overwrite else 0 ) ) )", "index": 31}, {"dataset": "docstring", "model": "retrieval", "description": "binary to string", "snippet": "DCSP if isinstance ( s , binary_type ) : DCNL DCSP DCSP return s DCNL DCSP elif isinstance ( s , Text ) : DCNL DCSP DCSP return s . encode ( encoding ) DCNL DCSP else : DCNL DCSP DCSP raise TypeError ( 'force_bytes DCSP expects DCSP a DCSP string DCSP type' )", "index": 31}, {"dataset": "conala", "model": "retrieval", "description": "binary to string", "snippet": "np . fromstring ( '\\x00\\x00\\x80?\\x00\\x00\\x00@\\x00\\x00@@\\x00\\x00\\x80@' , dtype = '>f4' )", "index": 31}, {"dataset": "synthetic", "model": "retrieval", "description": "binary to string", "snippet": "result = STRING_0 . join ( LIST_0 ) DCNL result . split ( )", "index": 31}, {"dataset": "django", "model": "nmt", "description": "binary to string", "snippet": "used RemovedInDjango19Warning", "index": 31}, {"dataset": "docstring", "model": "nmt", "description": "binary to string", "snippet": "DCSP return ( ( ( ( ( ( ( ( ( ( s * s ) * s", "index": 31}, {"dataset": "conala", "model": "nmt", "description": "binary to string", "snippet": "str ( myString )", "index": 31}, {"dataset": "synthetic", "model": "nmt", "description": "binary to string", "snippet": "eval ( 2.51 )", "index": 31}, {"dataset": "django", "model": "seekNMT", "description": "binary to string", "snippet": "_error_files", "index": 31}, {"dataset": "docstring", "model": "seekNMT", "description": "binary to string", "snippet": "DCSP string = string . replace ( string , string ) DCNL DCSP string = string . decode", "index": 31}, {"dataset": "conala", "model": "seekNMT", "description": "binary to string", "snippet": "hex ( number )", "index": 31}, {"dataset": "synthetic", "model": "seekNMT", "description": "binary to string", "snippet": "STRING_0 . split ( )", "index": 31}, {"dataset": "human", "model": "1", "description": "calculate execution time", "snippet": "import time DCNL start = time . time ( ) DCNL end = time . time ( ) DCNL print ( end - start ) ", "index": 25}, {"dataset": "human", "model": "2", "description": "calculate execution time", "snippet": "import time DCNL start = time . time ( ) DCNL end = time . time ( ) DCNL runtime = end - start ", "index": 25}, {"dataset": "django", "model": "retrieval", "description": "calculate execution time", "snippet": "timeval = time . time ( )", "index": 25}, {"dataset": "docstring", "model": "retrieval", "description": "calculate execution time", "snippet": "DCSP @ wraps ( func ) DCNL DCSP def wrapper ( * args , ** kwargs ) : DCNL DCSP DCSP start = time . time ( ) DCNL DCSP DCSP result = func ( * args , ** kwargs ) DCNL DCSP DCSP end = time . time ( ) DCNL DCSP DCSP print ( func . __name__ , ( end - start ) ) DCNL DCSP DCSP return result DCNL DCSP return wrapper", "index": 25}, {"dataset": "conala", "model": "retrieval", "description": "calculate execution time", "snippet": "sys . exit ( )", "index": 25}, {"dataset": "synthetic", "model": "retrieval", "description": "calculate execution time", "snippet": "VARIABLE_0 . time ( )", "index": 25}, {"dataset": "django", "model": "nmt", "description": "calculate execution time", "snippet": "import time", "index": 25}, {"dataset": "docstring", "model": "nmt", "description": "calculate execution time", "snippet": "DCSP if ( not isinstance ( <unk> , dict ) ) : DCNL DCSP DCSP return DCNL DCSP", "index": 25}, {"dataset": "conala", "model": "nmt", "description": "calculate execution time", "snippet": "datetime . datetime . strptime ( '2007-03-04T21:08:12' , '%Y-%m-%dT%H:%M:%S' )", "index": 25}, {"dataset": "synthetic", "model": "nmt", "description": "calculate execution time", "snippet": "<unk> <unk> . split ( )", "index": 25}, {"dataset": "django", "model": "seekNMT", "description": "calculate execution time", "snippet": ":", "index": 25}, {"dataset": "docstring", "model": "seekNMT", "description": "calculate execution time", "snippet": "DCSP return time . time ( )", "index": 25}, {"dataset": "conala", "model": "seekNMT", "description": "calculate execution time", "snippet": "datetime . datetime . strptime ( days = 0 )", "index": 25}, {"dataset": "synthetic", "model": "seekNMT", "description": "calculate execution time", "snippet": "VARIABLE_0 . remove ( min ( VARIABLE_0 ) )", "index": 25}, {"dataset": "human", "model": "1", "description": "cast to string", "snippet": "str ( elem ) ", "index": 14}, {"dataset": "human", "model": "2", "description": "cast to string", "snippet": "str ( variable ) ", "index": 14}, {"dataset": "django", "model": "retrieval", "description": "cast to string", "snippet": "result . append ( \".\" )", "index": 14}, {"dataset": "docstring", "model": "retrieval", "description": "cast to string", "snippet": "DCSP if ( not is_str ( obj ) ) : DCNL DCSP DCSP return coerce ( obj ) DCNL DCSP return obj", "index": 14}, {"dataset": "conala", "model": "retrieval", "description": "cast to string", "snippet": "ME' + str ( i )", "index": 14}, {"dataset": "synthetic", "model": "retrieval", "description": "cast to string", "snippet": "result = STRING_0 . join ( LIST_0 ) DCNL result . split ( )", "index": 14}, {"dataset": "django", "model": "nmt", "description": "cast to string", "snippet": "return <unk>", "index": 14}, {"dataset": "docstring", "model": "nmt", "description": "cast to string", "snippet": "DCSP return <unk> ( string , value , msg , msg , msg , msg , msg ,", "index": 14}, {"dataset": "conala", "model": "nmt", "description": "cast to string", "snippet": "str <unk> <unk> . len ( )", "index": 14}, {"dataset": "synthetic", "model": "nmt", "description": "cast to string", "snippet": "all ( word + globals ( ) )", "index": 14}, {"dataset": "django", "model": "seekNMT", "description": "cast to string", "snippet": "#ERROR!", "index": 14}, {"dataset": "docstring", "model": "seekNMT", "description": "cast to string", "snippet": "DCSP return tf . cast ( tf . cast , tf . cast , tf . cast ,", "index": 14}, {"dataset": "conala", "model": "seekNMT", "description": "cast to string", "snippet": "\\xe2\\x80\\x93'", "index": 14}, {"dataset": "synthetic", "model": "seekNMT", "description": "cast to string", "snippet": "STRING_0 . split ( )", "index": 14}, {"dataset": "human", "model": "1", "description": "check if `elem` is in dictionary", "snippet": "if elem in elem_dict : ", "index": 11}, {"dataset": "human", "model": "2", "description": "check if `elem` is in dictionary", "snippet": "if \"elem\" in dict : ", "index": 11}, {"dataset": "django", "model": "retrieval", "description": "check if `elem` is in dictionary", "snippet": "return check", "index": 11}, {"dataset": "docstring", "model": "retrieval", "description": "check if `elem` is in dictionary", "snippet": "DCSP body = XPath ( 'ancestor-or-self::h:body' ) ( elem ) DCNL DCSP if ( not body ) : DCNL DCSP DCSP return True DCNL DCSP body = body [ 0 ] DCNL DCSP ancestors = frozenset ( XPath ( 'ancestor::*' ) ( elem ) ) DCNL DCSP for x in body . iter ( ) : DCNL DCSP DCSP if ( x is elem ) : DCNL DCSP DCSP DCSP return True DCNL DCSP DCSP if ( hasattr ( getattr ( x , 'tag' , None ) , 'rpartition' ) and ( x . tag . rpartition ( '}' ) [ ( - 1 ) ] in { 'img' , 'svg' } ) ) : DCNL DCSP DCSP DCSP return False DCNL DCSP DCSP if ( isspace ( getattr ( x , 'text' , None ) ) and ( ( x in ancestors ) or isspace ( getattr ( x , 'tail' , None ) ) ) ) : DCNL DCSP DCSP DCSP continue DCNL DCSP DCSP return False DCNL DCSP return False", "index": 11}, {"dataset": "conala", "model": "retrieval", "description": "check if `elem` is in dictionary", "snippet": "( 7 in a )", "index": 11}, {"dataset": "synthetic", "model": "retrieval", "description": "check if `elem` is in dictionary", "snippet": "NUMBER_0 in LIST_0", "index": 11}, {"dataset": "django", "model": "nmt", "description": "check if `elem` is in dictionary", "snippet": "if <unk> in <unk> :", "index": 11}, {"dataset": "docstring", "model": "nmt", "description": "check if `elem` is in dictionary", "snippet": "DCSP return True", "index": 11}, {"dataset": "conala", "model": "nmt", "description": "check if `elem` is in dictionary", "snippet": "( 7 in d )", "index": 11}, {"dataset": "synthetic", "model": "nmt", "description": "check if `elem` is in dictionary", "snippet": "any ( letter . values ( ) ) for substring in input . zfill ( ) )", "index": 11}, {"dataset": "django", "model": "seekNMT", "description": "check if `elem` is in dictionary", "snippet": "check if is_writable ( is <unk> <unk> ) else [ check ]", "index": 11}, {"dataset": "docstring", "model": "seekNMT", "description": "check if `elem` is in dictionary", "snippet": "DCSP if <unk> : DCNL DCSP DCSP if <unk> : DCNL DCSP DCSP DCSP if <unk> : DCNL", "index": 11}, {"dataset": "conala", "model": "seekNMT", "description": "check if `elem` is in dictionary", "snippet": "( 'key1' in lst )", "index": 11}, {"dataset": "synthetic", "model": "seekNMT", "description": "check if `elem` is in dictionary", "snippet": "NUMBER_0 / 4", "index": 11}, {"dataset": "human", "model": "1", "description": "check if a list is empty", "snippet": "if not elem_list : ", "index": 10}, {"dataset": "human", "model": "2", "description": "check if a list is empty", "snippet": "if ( list == [ ] ) : ", "index": 10}, {"dataset": "django", "model": "retrieval", "description": "check if a list is empty", "snippet": "return check", "index": 10}, {"dataset": "docstring", "model": "retrieval", "description": "check if a list is empty", "snippet": "DCSP for i in xrange ( len ( seq ) ) : DCNL DCSP DCSP seq . pop ( )", "index": 10}, {"dataset": "conala", "model": "retrieval", "description": "check if a list is empty", "snippet": "if ( not a ) : DCNL DCSP DCSP pass", "index": 10}, {"dataset": "synthetic", "model": "retrieval", "description": "check if a list is empty", "snippet": "if LIST_0 :", "index": 10}, {"dataset": "django", "model": "nmt", "description": "check if a list is empty", "snippet": "check = [ ]", "index": 10}, {"dataset": "docstring", "model": "nmt", "description": "check if a list is empty", "snippet": "DCSP return ( ( not isinstance ( item , list ) ) and ( len ( item )", "index": 10}, {"dataset": "conala", "model": "nmt", "description": "check if a list is empty", "snippet": "if ( not seq ) : DCNL DCSP DCSP pass", "index": 10}, {"dataset": "synthetic", "model": "nmt", "description": "check if a list is empty", "snippet": "print ( '\\n' . join ( item ) for item in [ _f for _f in LIST_0 if", "index": 10}, {"dataset": "django", "model": "seekNMT", "description": "check if a list is empty", "snippet": "attrvalue = [ pattern ]", "index": 10}, {"dataset": "docstring", "model": "seekNMT", "description": "check if a list is empty", "snippet": "DCSP if ( not all ) : DCNL DCSP DCSP return False DCNL DCSP if ( len (", "index": 10}, {"dataset": "conala", "model": "seekNMT", "description": "check if a list is empty", "snippet": "if ( not j ) : DCNL DCSP DCSP pass", "index": 10}, {"dataset": "synthetic", "model": "seekNMT", "description": "check if a list is empty", "snippet": "any ( VARIABLE_0 )", "index": 10}, {"dataset": "human", "model": "1", "description": "check if is divisible by k", "snippet": "n % k == 0 ", "index": 28}, {"dataset": "human", "model": "2", "description": "check if is divisible by k", "snippet": "if ( a % b == 0 ) : ", "index": 28}, {"dataset": "django", "model": "retrieval", "description": "check if is divisible by k", "snippet": "return check", "index": 28}, {"dataset": "docstring", "model": "retrieval", "description": "check if is divisible by k", "snippet": "DCSP return ( ( value % num ) == 0 )", "index": 28}, {"dataset": "conala", "model": "retrieval", "description": "check if is divisible by k", "snippet": "( 7 in a )", "index": 28}, {"dataset": "synthetic", "model": "retrieval", "description": "check if is divisible by k", "snippet": "NUMBER_0 in LIST_0", "index": 28}, {"dataset": "django", "model": "nmt", "description": "check if is divisible by k", "snippet": "if digit in k :", "index": 28}, {"dataset": "docstring", "model": "nmt", "description": "check if is divisible by k", "snippet": "DCSP return ( ( val < 0 ) or ( val < 0 ) )", "index": 28}, {"dataset": "conala", "model": "nmt", "description": "check if is divisible by k", "snippet": "( not a ) . exists ( )", "index": 28}, {"dataset": "synthetic", "model": "nmt", "description": "check if is divisible by k", "snippet": "isinstance ( root , int ( 100 ) in except OSError )", "index": 28}, {"dataset": "django", "model": "seekNMT", "description": "check if is divisible by k", "snippet": "migration_name k", "index": 28}, {"dataset": "docstring", "model": "seekNMT", "description": "check if is divisible by k", "snippet": "DCSP if ( not <unk> ) : DCNL DCSP DCSP return False DCNL DCSP if ( not <unk>", "index": 28}, {"dataset": "conala", "model": "seekNMT", "description": "check if is divisible by k", "snippet": "#ERROR!", "index": 28}, {"dataset": "synthetic", "model": "seekNMT", "description": "check if is divisible by k", "snippet": "LIST_0 . remove ( NUMBER_0 )", "index": 28}, {"dataset": "human", "model": "1", "description": "check if string `string` starts with a number", "snippet": "string [ 0 ] . isdigit ( ) ", "index": 52}, {"dataset": "human", "model": "2", "description": "check if string `string` starts with a number", "snippet": "string [ 0 ] . isdigit ( ) ", "index": 52}, {"dataset": "django", "model": "retrieval", "description": "check if string `string` starts with a number", "snippet": "elif name == 'string' :", "index": 52}, {"dataset": "docstring", "model": "retrieval", "description": "check if string `string` starts with a number", "snippet": "DCSP def starts_with ( value ) : DCNL DCSP DCSP validate ( text , value ) DCNL DCSP DCSP if ( not value . startswith ( string ) ) : DCNL DCSP DCSP DCSP raise ValueError ( \"'{0}' DCSP does DCSP not DCSP start DCSP with DCSP '{1}'\" . format ( value , string ) ) DCNL DCSP DCSP return True DCNL DCSP return starts_with", "index": 52}, {"dataset": "conala", "model": "retrieval", "description": "check if string `string` starts with a number", "snippet": "b . isdigit ( )", "index": 52}, {"dataset": "synthetic", "model": "retrieval", "description": "check if string `string` starts with a number", "snippet": "STRING_0 . join ( LIST_0 ) DCNL if LIST_0 :", "index": 52}, {"dataset": "django", "model": "nmt", "description": "check if string `string` starts with a number", "snippet": "if <unk> . startswith ( <unk> ) :", "index": 52}, {"dataset": "docstring", "model": "nmt", "description": "check if string `string` starts with a number", "snippet": "DCSP return ( string . ascii_letters in string . ascii_letters )", "index": 52}, {"dataset": "conala", "model": "nmt", "description": "check if string `string` starts with a number", "snippet": "s . replace ( ',' , '' )", "index": 52}, {"dataset": "synthetic", "model": "nmt", "description": "check if string `string` starts with a number", "snippet": "isdigit ( <unk> <unk> <unk> )", "index": 52}, {"dataset": "django", "model": "seekNMT", "description": "check if string `string` starts with a number", "snippet": "#ERROR!", "index": 52}, {"dataset": "docstring", "model": "seekNMT", "description": "check if string `string` starts with a number", "snippet": "DCSP if isinstance ( value , str ) : DCNL DCSP DCSP return value DCNL DCSP elif isinstance ( value , str ) :", "index": 52}, {"dataset": "conala", "model": "seekNMT", "description": "check if string `string` starts with a number", "snippet": "for line in lst . readlines ( ) : DCNL DCSP DCSP pass", "index": 52}, {"dataset": "synthetic", "model": "seekNMT", "description": "check if string `string` starts with a number", "snippet": "datetime . date . today ( ) + datetime . timedelta ( days = 1 )", "index": 52}, {"dataset": "human", "model": "1", "description": "check if string is number", "snippet": "string . isdigit ( ) ", "index": 37}, {"dataset": "human", "model": "2", "description": "check if string is number", "snippet": "a . isdigit ( ) ", "index": 37}, {"dataset": "django", "model": "retrieval", "description": "check if string is number", "snippet": "return check", "index": 37}, {"dataset": "docstring", "model": "retrieval", "description": "check if string is number", "snippet": "DCSP return ( isinstance ( s , unicode ) or isinstance ( s , str ) )", "index": 37}, {"dataset": "conala", "model": "retrieval", "description": "check if string is number", "snippet": "b . isdigit ( )", "index": 37}, {"dataset": "synthetic", "model": "retrieval", "description": "check if string is number", "snippet": "NUMBER_0 in LIST_0", "index": 37}, {"dataset": "django", "model": "nmt", "description": "check if string is number", "snippet": "if check :", "index": 37}, {"dataset": "docstring", "model": "nmt", "description": "check if string is number", "snippet": "DCSP return ( isinstance ( s , unicode ) and ( s . startswith ( '\"' ) and s . startswith ( '\"' )", "index": 37}, {"dataset": "conala", "model": "nmt", "description": "check if string is number", "snippet": "if some_string : DCNL DCSP DCSP pass", "index": 37}, {"dataset": "synthetic", "model": "nmt", "description": "check if string is number", "snippet": "all ( word == NUMBER_1 )", "index": 37}, {"dataset": "django", "model": "seekNMT", "description": "check if string is number", "snippet": "url not <unk> required <unk> <unk> to <unk> <unk> )", "index": 37}, {"dataset": "docstring", "model": "seekNMT", "description": "check if string is number", "snippet": "DCSP if isinstance ( value , basestring ) : DCNL DCSP DCSP if isinstance ( value , bool ) : DCNL DCSP DCSP DCSP", "index": 37}, {"dataset": "conala", "model": "seekNMT", "description": "check if string is number", "snippet": "if ( conv is i ) : DCNL DCSP DCSP pass", "index": 37}, {"dataset": "synthetic", "model": "seekNMT", "description": "check if string is number", "snippet": "datetime . date . today ( ) + datetime . timedelta ( days = 1 )", "index": 37}, {"dataset": "human", "model": "1", "description": "check type", "snippet": "if type ( o ) is str : ", "index": 40}, {"dataset": "human", "model": "2", "description": "check type", "snippet": "if ( type ( var ) == wanted_type ) : ", "index": 40}, {"dataset": "django", "model": "retrieval", "description": "check type", "snippet": "return check", "index": 40}, {"dataset": "docstring", "model": "retrieval", "description": "check type", "snippet": "DCSP if ( not isinstance ( obj , obj_type ) ) : DCNL DCSP DCSP raise TypeError ( ( '%s DCSP must DCSP be DCSP a DCSP %s, DCSP got DCSP %s' % ( obj_name , obj_type , obj . __class__ . __name__ ) ) ) DCNL DCSP return obj", "index": 40}, {"dataset": "conala", "model": "retrieval", "description": "check type", "snippet": "isinstance ( s , str )", "index": 40}, {"dataset": "synthetic", "model": "retrieval", "description": "check type", "snippet": "type ( VARIABLE_0 )", "index": 40}, {"dataset": "django", "model": "nmt", "description": "check type", "snippet": "check check check check check check check check check check check check check check check check check check check check check check check check", "index": 40}, {"dataset": "docstring", "model": "nmt", "description": "check type", "snippet": "DCSP return ( ( not <unk> ( ) ) and ( not <unk> ( ) ) )", "index": 40}, {"dataset": "conala", "model": "nmt", "description": "check type", "snippet": "os . getcwd ( )", "index": 40}, {"dataset": "synthetic", "model": "nmt", "description": "check type", "snippet": "for hasattr ( chdir ( VARIABLE_1 ) in 1 ) )", "index": 40}, {"dataset": "django", "model": "seekNMT", "description": "check type", "snippet": ":", "index": 40}, {"dataset": "docstring", "model": "seekNMT", "description": "check type", "snippet": "DCSP result = False DCNL DCSP result = False DCNL DCSP result = False DCNL DCSP result = False DCNL DCSP result = False", "index": 40}, {"dataset": "conala", "model": "seekNMT", "description": "check type", "snippet": "] . 5", "index": 40}, {"dataset": "synthetic", "model": "seekNMT", "description": "check type", "snippet": "sorted ( VARIABLE_0 , reverse = True )", "index": 40}, {"dataset": "human", "model": "1", "description": "convert dictionary to json", "snippet": "json . dumps ( d ) ", "index": 50}, {"dataset": "human", "model": "2", "description": "convert dictionary to json", "snippet": "import json DCNL json . dumps ( my_dict ) ", "index": 50}, {"dataset": "django", "model": "retrieval", "description": "convert dictionary to json", "snippet": "import json", "index": 50}, {"dataset": "docstring", "model": "retrieval", "description": "convert dictionary to json", "snippet": "DCSP return json . dumps ( a , cls = AnsibleJSONEncoder , * args , ** kw )", "index": 50}, {"dataset": "conala", "model": "retrieval", "description": "convert dictionary to json", "snippet": "json . load ( u )", "index": 50}, {"dataset": "synthetic", "model": "retrieval", "description": "convert dictionary to json", "snippet": "VARIABLE_0 - datetime . datetime . timedelta ( days = 7 ) DCNL NUMBER_0 ** NUMBER_1", "index": 50}, {"dataset": "django", "model": "nmt", "description": "convert dictionary to json", "snippet": "<unk> . extend ( { <unk> : <unk> , <unk> : <unk> , <unk> : <unk> , <unk> : <unk> , <unk> : <unk>", "index": 50}, {"dataset": "docstring", "model": "nmt", "description": "convert dictionary to json", "snippet": "DCSP return dict ( ( ( k , v ) for ( k , v ) in d . items ( ) if (", "index": 50}, {"dataset": "conala", "model": "nmt", "description": "convert dictionary to json", "snippet": "r = requests . put ( )", "index": 50}, {"dataset": "synthetic", "model": "nmt", "description": "convert dictionary to json", "snippet": "VARIABLE_1 . append ( '{0!r}:{1!r}' )", "index": 50}, {"dataset": "django", "model": "seekNMT", "description": "convert dictionary to json", "snippet": "values += inner", "index": 50}, {"dataset": "docstring", "model": "seekNMT", "description": "convert dictionary to json", "snippet": "DCSP dictionary = { } DCNL DCSP dictionary [ key ] = dictionary [ key ] DCNL DCSP dictionary [ key ] = dictionary", "index": 50}, {"dataset": "conala", "model": "seekNMT", "description": "convert dictionary to json", "snippet": "stream ]", "index": 50}, {"dataset": "synthetic", "model": "seekNMT", "description": "convert dictionary to json", "snippet": "result = datetime . datetime . now ( ) DCNL result = ( now - VARIABLE_0 ) . total_seconds ( )", "index": 50}, {"dataset": "human", "model": "1", "description": "convert string list to string", "snippet": "\" \" . join ( my_list ) ", "index": 46}, {"dataset": "human", "model": "2", "description": "convert string list to string", "snippet": "concatenated_list_string = '' . join ( my_string_list ) ", "index": 46}, {"dataset": "django", "model": "retrieval", "description": "convert string list to string", "snippet": "return str ( o )", "index": 46}, {"dataset": "docstring", "model": "retrieval", "description": "convert string list to string", "snippet": "DCSP return '.' . join ( [ str ( x ) for x in obj ] )", "index": 46}, {"dataset": "conala", "model": "retrieval", "description": "convert string list to string", "snippet": "str ( i )", "index": 46}, {"dataset": "synthetic", "model": "retrieval", "description": "convert string list to string", "snippet": "result = STRING_0 . join ( LIST_0 ) DCNL result . split ( )", "index": 46}, {"dataset": "django", "model": "nmt", "description": "convert string list to string", "snippet": "return [ <unk> ]", "index": 46}, {"dataset": "docstring", "model": "nmt", "description": "convert string list to string", "snippet": "DCSP if ( not isinstance ( s , str ) ) : DCNL DCSP DCSP s = s . encode ( 'utf-8' ) DCNL", "index": 46}, {"dataset": "conala", "model": "nmt", "description": "convert string list to string", "snippet": "a [ : int ( x ) ]", "index": 46}, {"dataset": "synthetic", "model": "nmt", "description": "convert string list to string", "snippet": " . join ( 'hello' )", "index": 46}, {"dataset": "django", "model": "seekNMT", "description": "convert string list to string", "snippet": "append = ''", "index": 46}, {"dataset": "docstring", "model": "seekNMT", "description": "convert string list to string", "snippet": "DCSP return tuple ( map ( str , string ) )", "index": 46}, {"dataset": "conala", "model": "seekNMT", "description": "convert string list to string", "snippet": "hex ( s )", "index": 46}, {"dataset": "synthetic", "model": "seekNMT", "description": "convert string list to string", "snippet": "STRING_0 . split ( )", "index": 46}, {"dataset": "human", "model": "1", "description": "create a class", "snippet": "class MyClass : ", "index": 26}, {"dataset": "human", "model": "2", "description": "create a class", "snippet": "class my_class ( ) : ", "index": 26}, {"dataset": "django", "model": "retrieval", "description": "create a class", "snippet": "iter ( x )", "index": 26}, {"dataset": "docstring", "model": "retrieval", "description": "create a class", "snippet": "DCSP return type ( bytes_if_py2 ( name ) , ( parent , ) , { u'__module__' : module } )", "index": 26}, {"dataset": "conala", "model": "retrieval", "description": "create a class", "snippet": "getattr ( test , a_string )", "index": 26}, {"dataset": "synthetic", "model": "retrieval", "description": "create a class", "snippet": "datetime . combine ( VARIABLE_0 , datetime . datetime . min . time ( ) )", "index": 26}, {"dataset": "django", "model": "nmt", "description": "create a class", "snippet": "if x . lower ( ) :", "index": 26}, {"dataset": "docstring", "model": "nmt", "description": "create a class", "snippet": "DCSP return <unk> ( ) . <unk> ( )", "index": 26}, {"dataset": "conala", "model": "nmt", "description": "create a class", "snippet": "( 'key1' , nargs = False )", "index": 26}, {"dataset": "synthetic", "model": "nmt", "description": "create a class", "snippet": "#ERROR!", "index": 26}, {"dataset": "django", "model": "seekNMT", "description": "create a class", "snippet": ")", "index": 26}, {"dataset": "docstring", "model": "seekNMT", "description": "create a class", "snippet": "DCSP class wrapper ( object , ) : DCNL DCSP DCSP def __init__ ( self , * args", "index": 26}, {"dataset": "conala", "model": "seekNMT", "description": "create a class", "snippet": ". Thread ( 'ascii' , 'ignore' )", "index": 26}, {"dataset": "synthetic", "model": "seekNMT", "description": "create a class", "snippet": "datetime . date . today ( ) + datetime . timedelta ( days = 1 )", "index": 26}, {"dataset": "human", "model": "1", "description": "create dictionary from list of tuples", "snippet": "{ key : value for ( key , value ) in elem_list } ", "index": 15}, {"dataset": "human", "model": "2", "description": "create dictionary from list of tuples", "snippet": "dict ( tuple_variable ) ", "index": 15}, {"dataset": "django", "model": "retrieval", "description": "create dictionary from list of tuples", "snippet": "candidate_subs = dict ( zip ( prefix_args + params , text_args ) )", "index": 15}, {"dataset": "docstring", "model": "retrieval", "description": "create dictionary from list of tuples", "snippet": "DCSP short2rgb_dict = dict ( CLUT ) DCNL DCSP rgb2short_dict = { } DCNL DCSP for ( k , v ) in short2rgb_dict . items ( ) : DCNL DCSP DCSP rgb2short_dict [ v ] = k DCNL DCSP return ( rgb2short_dict , short2rgb_dict )", "index": 15}, {"dataset": "conala", "model": "retrieval", "description": "create dictionary from list of tuples", "snippet": "dict ( x [ 1 : ] for x in reversed ( myListOfTuples ) )", "index": 15}, {"dataset": "synthetic", "model": "retrieval", "description": "create dictionary from list of tuples", "snippet": "result = [ item for sublist in LIST_0 for item in sublist ] DCNL ',' . join ( result )", "index": 15}, {"dataset": "django", "model": "nmt", "description": "create dictionary from list of tuples", "snippet": "<unk> . append ( { <unk> : 1 ] )", "index": 15}, {"dataset": "docstring", "model": "nmt", "description": "create dictionary from list of tuples", "snippet": "DCSP return [ ( k , v ) for ( k , v ) in sorted ( list", "index": 15}, {"dataset": "conala", "model": "nmt", "description": "create dictionary from list of tuples", "snippet": "[ ( x + tuple ( y ) for y in b ] ) for y in range", "index": 15}, {"dataset": "synthetic", "model": "nmt", "description": "create dictionary from list of tuples", "snippet": "list ( dict ( x for x in list ( dct . items ( ) ) )", "index": 15}, {"dataset": "django", "model": "seekNMT", "description": "create dictionary from list of tuples", "snippet": "indent [ 0 ]", "index": 15}, {"dataset": "docstring", "model": "seekNMT", "description": "create dictionary from list of tuples", "snippet": "DCSP if isinstance ( node , dict ) : DCNL DCSP DCSP for node in node . keys", "index": 15}, {"dataset": "conala", "model": "seekNMT", "description": "create dictionary from list of tuples", "snippet": "[ d == [ ] for d in items ]", "index": 15}, {"dataset": "synthetic", "model": "seekNMT", "description": "create dictionary from list of tuples", "snippet": "[ item for sublist in LIST_0 for item in sublist ]", "index": 15}, {"dataset": "human", "model": "1", "description": "declare enum", "snippet": "from enum import Enum DCNL class Color ( Enum ) : DCNL DCSP DCSP RED = 1 DCNL DCSP DCSP BLUE = 2 ", "index": 43}, {"dataset": "human", "model": "2", "description": "declare enum", "snippet": "from enum import Enum DCNL class Days ( Enum ) : DCNL DCSP DCSP SUN , MON , TUE , WED , THU , FRI , SAT = range ( 7 ) ", "index": 43}, {"dataset": "django", "model": "retrieval", "description": "declare enum", "snippet": "global _cached_modules , _cached_filenames", "index": 43}, {"dataset": "docstring", "model": "retrieval", "description": "declare enum", "snippet": "DCSP if isinstance ( enum , string_types ) : DCNL DCSP DCSP try : DCNL DCSP DCSP DCSP enum = getattr ( gl , ( 'GL_' + enum . upper ( ) ) ) DCNL DCSP DCSP except AttributeError : DCNL DCSP DCSP DCSP try : DCNL DCSP DCSP DCSP DCSP enum = _internalformats [ ( 'GL_' + enum . upper ( ) ) ] DCNL DCSP DCSP DCSP except KeyError : DCNL DCSP DCSP DCSP DCSP raise ValueError ( ( 'Could DCSP not DCSP find DCSP int DCSP value DCSP for DCSP enum DCSP %r' % enum ) ) DCNL DCSP return enum", "index": 43}, {"dataset": "conala", "model": "retrieval", "description": "declare enum", "snippet": "my_list = [ ]", "index": 43}, {"dataset": "synthetic", "model": "retrieval", "description": "declare enum", "snippet": "LIST_0 . clear ( ) DCNL NUMBER_0 / NUMBER_1", "index": 43}, {"dataset": "django", "model": "nmt", "description": "declare enum", "snippet": "while <unk> :", "index": 43}, {"dataset": "docstring", "model": "nmt", "description": "declare enum", "snippet": "DCSP return ( ( ( ( ( ( ( ( ( ( ( ( ( ( target + target ) + target ) +", "index": 43}, {"dataset": "conala", "model": "nmt", "description": "declare enum", "snippet": "variable = [ ]", "index": 43}, {"dataset": "synthetic", "model": "nmt", "description": "declare enum", "snippet": "p . random ( not , input = VARIABLE_0 )", "index": 43}, {"dataset": "django", "model": "seekNMT", "description": "declare enum", "snippet": ":", "index": 43}, {"dataset": "docstring", "model": "seekNMT", "description": "declare enum", "snippet": "DCSP return cupy . sqrt ( <unk> )", "index": 43}, {"dataset": "conala", "model": "seekNMT", "description": "declare enum", "snippet": "[ 'C' ] == 1", "index": 43}, {"dataset": "synthetic", "model": "seekNMT", "description": "declare enum", "snippet": "False not in [ VARIABLE_0 [ i ] == VARIABLE_0 [ - i - 1 ] for i in range ( len ( VARIABLE_0 ) ) ]", "index": 43}, {"dataset": "human", "model": "1", "description": "declare global variable", "snippet": "global var ", "index": 35}, {"dataset": "human", "model": "2", "description": "declare global variable", "snippet": "global var1 DCNL var1 = value ", "index": 35}, {"dataset": "django", "model": "retrieval", "description": "declare global variable", "snippet": "global _serializers", "index": 35}, {"dataset": "docstring", "model": "retrieval", "description": "declare global variable", "snippet": "DCSP return communicate ( sock , ( '__get_global__(\"%s\")' % name ) )", "index": 35}, {"dataset": "conala", "model": "retrieval", "description": "declare global variable", "snippet": "variable = [ ]", "index": 35}, {"dataset": "synthetic", "model": "retrieval", "description": "declare global variable", "snippet": "VARIABLE_0 . day", "index": 35}, {"dataset": "django", "model": "nmt", "description": "declare global variable", "snippet": "@ <unk>", "index": 35}, {"dataset": "docstring", "model": "nmt", "description": "declare global variable", "snippet": "DCSP global <unk> DCNL DCSP global <unk> DCNL DCSP global <unk> DCNL DCSP global <unk> DCNL DCSP global <unk> DCNL DCSP global <unk> DCNL", "index": 35}, {"dataset": "conala", "model": "nmt", "description": "declare global variable", "snippet": "variable = [ ]", "index": 35}, {"dataset": "synthetic", "model": "nmt", "description": "declare global variable", "snippet": "r = np . random ( '\\x00\\x00\\x80?\\x00\\x00\\x00@\\x00\\x00@@\\x00\\x00\\x80@' , input = VARIABLE_0 )", "index": 35}, {"dataset": "django", "model": "seekNMT", "description": "declare global variable", "snippet": ":", "index": 35}, {"dataset": "docstring", "model": "seekNMT", "description": "declare global variable", "snippet": "DCSP return <unk> ( barDs , count , talib . <unk> )", "index": 35}, {"dataset": "conala", "model": "seekNMT", "description": "declare global variable", "snippet": "my_list [ 2 ]", "index": 35}, {"dataset": "synthetic", "model": "seekNMT", "description": "declare global variable", "snippet": "False not in [ VARIABLE_0 [ i ] == VARIABLE_0 [ - i - 1 ] for i in range ( len ( VARIABLE_0 ) ) ]", "index": 35}, {"dataset": "human", "model": "1", "description": "delete an item with key `key` from `mydict`", "snippet": "del mydict [ key ] ", "index": 17}, {"dataset": "human", "model": "2", "description": "delete an item with key `key` from `mydict`", "snippet": "del mydict [ \"key\" ] ", "index": 17}, {"dataset": "django", "model": "retrieval", "description": "delete an item with key `key` from `mydict`", "snippet": "del self [ key ]", "index": 17}, {"dataset": "docstring", "model": "retrieval", "description": "delete an item with key `key` from `mydict`", "snippet": "DCSP if ( by == 'key' ) : DCNL DCSP DCSP pos = 0 DCNL DCSP elif ( by == 'value' ) : DCNL DCSP DCSP pos = 1 DCNL DCSP else : DCNL DCSP DCSP raise FilterArgumentError ( 'You DCSP can DCSP only DCSP sort DCSP by DCSP either DCSP \"key\" DCSP or DCSP \"value\"' ) DCNL DCSP def sort_func ( item ) : DCNL DCSP DCSP value = item [ pos ] DCNL DCSP DCSP if ( isinstance ( value , basestring ) and ( not case_sensitive ) ) : DCNL DCSP DCSP DCSP value = value . lower ( ) DCNL DCSP DCSP return value DCNL DCSP return sorted ( value . items ( ) , key = sort_func )", "index": 17}, {"dataset": "conala", "model": "retrieval", "description": "delete an item with key `key` from `mydict`", "snippet": "mydict . pop ( 'key' , None )", "index": 17}, {"dataset": "synthetic", "model": "retrieval", "description": "delete an item with key `key` from `mydict`", "snippet": "LIST_0 . remove ( STRING_0 )", "index": 17}, {"dataset": "django", "model": "nmt", "description": "delete an item with key `key` from `mydict`", "snippet": "del item [ 'description' ]", "index": 17}, {"dataset": "docstring", "model": "nmt", "description": "delete an item with key `key` from `mydict`", "snippet": "DCSP key = key . replace ( key , '' ) DCNL DCSP key = key . replace", "index": 17}, {"dataset": "conala", "model": "nmt", "description": "delete an item with key `key` from `mydict`", "snippet": "try : DCNL DCSP DCSP try : DCNL DCSP DCSP DCSP DCSP print ( 'i' in [ 0", "index": 17}, {"dataset": "synthetic", "model": "nmt", "description": "delete an item with key `key` from `mydict`", "snippet": "shutil . environ ( url = '\\u3042' )", "index": 17}, {"dataset": "django", "model": "seekNMT", "description": "delete an item with key `key` from `mydict`", "snippet": "yield key", "index": 17}, {"dataset": "docstring", "model": "seekNMT", "description": "delete an item with key `key` from `mydict`", "snippet": "DCSP if ( not isinstance ( value , str ) ) : DCNL DCSP DCSP raise TypeError (", "index": 17}, {"dataset": "conala", "model": "seekNMT", "description": "delete an item with key `key` from `mydict`", "snippet": "my_list . append ( a )", "index": 17}, {"dataset": "synthetic", "model": "seekNMT", "description": "delete an item with key `key` from `mydict`", "snippet": "result = LIST_0 [ NUMBER_0 : ]", "index": 17}, {"dataset": "human", "model": "1", "description": "does list contain", "snippet": "if myItem in list : ", "index": 29}, {"dataset": "human", "model": "2", "description": "does list contain", "snippet": "if a in list : ", "index": 29}, {"dataset": "django", "model": "retrieval", "description": "does list contain", "snippet": "indent = '\\t' 1 __pycache__ data_utils . py lines maskGenerator . sh toFileIf . sh train . code train . desc tabs", "index": 29}, {"dataset": "docstring", "model": "retrieval", "description": "does list contain", "snippet": "DCSP if isinstance ( key , tuple ) : DCNL DCSP DCSP if ( len ( key ) > 2 ) : DCNL DCSP DCSP DCSP raise IndexError ( 'Invalid DCSP index/slice.' ) DCNL DCSP DCSP key_elems = [ key [ 0 ] , key [ 1 ] ] DCNL DCSP else : DCNL DCSP DCSP key_elems = [ key ] DCNL DCSP for elem in key_elems : DCNL DCSP DCSP if ( not ( isinstance ( elem , ( numbers . Number , slice ) ) or np . isscalar ( elem ) ) ) : DCNL DCSP DCSP DCSP return True DCNL DCSP return False", "index": 29}, {"dataset": "conala", "model": "retrieval", "description": "does list contain", "snippet": "\"This DCSP DCSP is a DCSP DCSP string\" . split ( )", "index": 29}, {"dataset": "synthetic", "model": "retrieval", "description": "does list contain", "snippet": "LIST_0 . clear ( )", "index": 29}, {"dataset": "django", "model": "nmt", "description": "does list contain", "snippet": "fixture = [ <unk> ]", "index": 29}, {"dataset": "docstring", "model": "nmt", "description": "does list contain", "snippet": "DCSP return <unk> ( barDs , count , talib . <unk> , timeperiod )", "index": 29}, {"dataset": "conala", "model": "nmt", "description": "does list contain", "snippet": "result = numpy . array ( )", "index": 29}, {"dataset": "synthetic", "model": "nmt", "description": "does list contain", "snippet": "list ( frozenset ( frozenset , LIST_0 ) )", "index": 29}, {"dataset": "django", "model": "seekNMT", "description": "does list contain", "snippet": ")'", "index": 29}, {"dataset": "docstring", "model": "seekNMT", "description": "does list contain", "snippet": "DCSP return list ( list ( list ( list ( list ( list ( list ( list (", "index": 29}, {"dataset": "conala", "model": "seekNMT", "description": "does list contain", "snippet": "for ( d2 , d2 ) in result )", "index": 29}, {"dataset": "synthetic", "model": "seekNMT", "description": "does list contain", "snippet": "result . split ( )", "index": 29}, {"dataset": "human", "model": "1", "description": "duplicate list n times", "snippet": "x = my_list * n ", "index": 21}, {"dataset": "human", "model": "2", "description": "duplicate list n times", "snippet": "my_list = my_list * n ", "index": 21}, {"dataset": "django", "model": "retrieval", "description": "duplicate list n times", "snippet": "return duplicate", "index": 21}, {"dataset": "docstring", "model": "retrieval", "description": "duplicate list n times", "snippet": "DCSP if ( ( t is not None ) and ( coord_frame != t [ 'from' ] ) ) : DCNL DCSP DCSP raise RuntimeError ( 'transformation DCSP frame DCSP does DCSP not DCSP match DCSP the DCSP coil DCSP set' ) DCNL DCSP coils = deepcopy ( coils ) DCNL DCSP if ( t is not None ) : DCNL DCSP DCSP coord_frame = t [ 'to' ] DCNL DCSP DCSP for coil in coils : DCNL DCSP DCSP DCSP for key in ( 'ex' , 'ey' , 'ez' ) : DCNL DCSP DCSP DCSP DCSP if ( key in coil ) : DCNL DCSP DCSP DCSP DCSP DCSP coil [ key ] = apply_trans ( t [ 'trans' ] , coil [ key ] , False ) DCNL DCSP DCSP DCSP coil [ 'r0' ] = apply_trans ( t [ 'trans' ] , coil [ 'r0' ] ) DCNL DCSP DCSP DCSP coil [ 'rmag' ] = apply_trans ( t [ 'trans' ] , coil [ 'rmag' ] ) DCNL DCSP DCSP DCSP coil [ 'cosmag' ] = apply_trans ( t [ 'trans' ] , coil [ 'cosmag' ] , False ) DCNL DCSP DCSP DCSP coil [ 'coord_frame' ] = t [ 'to' ] DCNL DCSP return ( coils , coord_frame )", "index": 21}, {"dataset": "conala", "model": "retrieval", "description": "duplicate list n times", "snippet": "list ( dict ( ( x [ 0 ] , x ) for x in L ) . values ( ) )", "index": 21}, {"dataset": "synthetic", "model": "retrieval", "description": "duplicate list n times", "snippet": "LIST_0 . copy ( )", "index": 21}, {"dataset": "django", "model": "nmt", "description": "duplicate list n times", "snippet": "duplicate . <unk> ( <unk> , <unk> , list , list , list , list , list ,", "index": 21}, {"dataset": "docstring", "model": "nmt", "description": "duplicate list n times", "snippet": "DCSP if ( n is None ) : DCNL DCSP DCSP n = len ( n ) DCNL", "index": 21}, {"dataset": "conala", "model": "nmt", "description": "duplicate list n times", "snippet": "list ( map ( my_dictionary . fromkeys , keys ) )", "index": 21}, {"dataset": "synthetic", "model": "nmt", "description": "duplicate list n times", "snippet": "[ line . encode ( '\\n' ) for line in sublist ]", "index": 21}, {"dataset": "django", "model": "seekNMT", "description": "duplicate list n times", "snippet": "", "index": 21}, {"dataset": "docstring", "model": "seekNMT", "description": "duplicate list n times", "snippet": "DCSP if ( len ( <unk> ) > 0 ) : DCNL DCSP DCSP raise ValueError ( <unk>", "index": 21}, {"dataset": "conala", "model": "seekNMT", "description": "duplicate list n times", "snippet": "[ : ]", "index": 21}, {"dataset": "synthetic", "model": "seekNMT", "description": "duplicate list n times", "snippet": "LIST_0 . clear ( )", "index": 21}, {"dataset": "human", "model": "1", "description": "execute a command `command ` in the terminal from a python script", "snippet": "os . system ( command ) ", "index": 54}, {"dataset": "human", "model": "2", "description": "execute a command `command ` in the terminal from a python script", "snippet": "import subprocess DCNL subprocess . Popen ( command ) ", "index": 54}, {"dataset": "django", "model": "retrieval", "description": "execute a command `command ` in the terminal from a python script", "snippet": "return command . execute ( 1 __pycache__ data_utils . py lines maskGenerator . sh toFileIf . sh train . code train . desc args , 1 __pycache__ data_utils . py lines maskGenerator . sh toFileIf . sh train . code train . desc defaults )", "index": 54}, {"dataset": "docstring", "model": "retrieval", "description": "execute a command `command ` in the terminal from a python script", "snippet": "DCSP args = ( ( sys . executable , ) + args ) DCNL DCSP return ( subprocess . call ( args ) == 0 )", "index": 54}, {"dataset": "conala", "model": "retrieval", "description": "execute a command `command ` in the terminal from a python script", "snippet": "os . system ( 'dir c:\\\\' )", "index": 54}, {"dataset": "synthetic", "model": "retrieval", "description": "execute a command `command ` in the terminal from a python script", "snippet": "if __name__ == '__main__' : DCNL", "index": 54}, {"dataset": "django", "model": "nmt", "description": "execute a command `command ` in the terminal from a python script", "snippet": "<unk> in ( <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>", "index": 54}, {"dataset": "docstring", "model": "nmt", "description": "execute a command `command ` in the terminal from a python script", "snippet": "DCSP return subprocess . Popen ( cmd , shell = True , stderr = subprocess . PIPE , stderr = subprocess . PIPE ,", "index": 54}, {"dataset": "conala", "model": "nmt", "description": "execute a command `command ` in the terminal from a python script", "snippet": "os . system ( <unk> <unk> )", "index": 54}, {"dataset": "synthetic", "model": "nmt", "description": "execute a command `command ` in the terminal from a python script", "snippet": "os . system ( <unk> <unk> <unk> <unk> <unk> )", "index": 54}, {"dataset": "django", "model": "seekNMT", "description": "execute a command `command ` in the terminal from a python script", "snippet": "curs . write ( \",\" )", "index": 54}, {"dataset": "docstring", "model": "seekNMT", "description": "execute a command `command ` in the terminal from a python script", "snippet": "DCSP return <unk> ( cmd , cmd , cmd , cmd , stdout , stderr , stdin , stdin , stdin , stdin ,", "index": 54}, {"dataset": "conala", "model": "seekNMT", "description": "execute a command `command ` in the terminal from a python script", "snippet": "os . delete ( 'some' )", "index": 54}, {"dataset": "synthetic", "model": "seekNMT", "description": "execute a command `command ` in the terminal from a python script", "snippet": "datetime . today ( ) . isoweekday ( )", "index": 54}, {"dataset": "human", "model": "1", "description": "first character in string", "snippet": "my_string [ 0 ] ", "index": 48}, {"dataset": "human", "model": "2", "description": "first character in string", "snippet": "my_string [ 0 ] ", "index": 48}, {"dataset": "django", "model": "retrieval", "description": "first character in string", "snippet": "for character in name :", "index": 48}, {"dataset": "docstring", "model": "retrieval", "description": "first character in string", "snippet": "DCSP floatValue = getFloatFromCharacterSplitLine ( character , splitLine ) DCNL DCSP if ( floatValue == None ) : DCNL DCSP DCSP return None DCNL DCSP floatValue += offset DCNL DCSP integerValue = int ( round ( float ( ( floatValue / step ) ) ) ) DCNL DCSP return ( character + str ( integerValue ) )", "index": 48}, {"dataset": "conala", "model": "retrieval", "description": "first character in string", "snippet": "newcontents = contents . replace ( 'a' , 'e' ) . replace ( 's' , '3' )", "index": 48}, {"dataset": "synthetic", "model": "retrieval", "description": "first character in string", "snippet": "VARIABLE_0 [ 1 : ]", "index": 48}, {"dataset": "django", "model": "nmt", "description": "first character in string", "snippet": "[ 0 ] in <unk>", "index": 48}, {"dataset": "docstring", "model": "nmt", "description": "first character in string", "snippet": "DCSP return text . replace ( '\\n' , '' )", "index": 48}, {"dataset": "conala", "model": "nmt", "description": "first character in string", "snippet": "\"\" . join ( reversed ( string ) )", "index": 48}, {"dataset": "synthetic", "model": "nmt", "description": "first character in string", "snippet": "c . rsplit ( 'string_escape' )", "index": 48}, {"dataset": "django", "model": "seekNMT", "description": "first character in string", "snippet": "values", "index": 48}, {"dataset": "docstring", "model": "seekNMT", "description": "first character in string", "snippet": "DCSP pos = pos . count ( '+' ) DCNL DCSP pos += pos DCNL DCSP pos += pos DCNL DCSP pos += pos", "index": 48}, {"dataset": "conala", "model": "seekNMT", "description": "first character in string", "snippet": "ord ( <unk> is <unk> )", "index": 48}, {"dataset": "synthetic", "model": "seekNMT", "description": "first character in string", "snippet": "del LIST_0 [ 0 ]", "index": 48}, {"dataset": "human", "model": "1", "description": "floor division", "snippet": "x // y ", "index": 27}, {"dataset": "human", "model": "2", "description": "floor division", "snippet": "a // b ", "index": 27}, {"dataset": "django", "model": "retrieval", "description": "floor division", "snippet": "base36 . append ( digits [ i // j ] )", "index": 27}, {"dataset": "docstring", "model": "retrieval", "description": "floor division", "snippet": "DCSP np = import_module ( 'numpy' ) DCNL DCSP if isinstance ( x , ( int , float ) ) : DCNL DCSP DCSP return interval ( np . floor ( x ) ) DCNL DCSP elif isinstance ( x , interval ) : DCNL DCSP DCSP if ( x . is_valid is False ) : DCNL DCSP DCSP DCSP return interval ( ( - np . inf ) , np . inf , is_valid = False ) DCNL DCSP DCSP else : DCNL DCSP DCSP DCSP start = np . floor ( x . start ) DCNL DCSP DCSP DCSP end = np . floor ( x . end ) DCNL DCSP DCSP DCSP if ( start == end ) : DCNL DCSP DCSP DCSP DCSP return interval ( start , end , is_valid = x . is_valid ) DCNL DCSP DCSP DCSP else : DCNL DCSP DCSP DCSP DCSP return interval ( start , end , is_valid = None ) DCNL DCSP else : DCNL DCSP DCSP return NotImplementedError", "index": 27}, {"dataset": "conala", "model": "retrieval", "description": "floor division", "snippet": "", "index": 27}, {"dataset": "synthetic", "model": "retrieval", "description": "floor division", "snippet": "NUMBER_0 // NUMBER_1", "index": 27}, {"dataset": "django", "model": "nmt", "description": "floor division", "snippet": "size // min_value", "index": 27}, {"dataset": "docstring", "model": "nmt", "description": "floor division", "snippet": "DCSP return base ( base , base , base , base , base , base , base ,", "index": 27}, {"dataset": "conala", "model": "nmt", "description": "floor division", "snippet": "redirect ( 'Home.views.index' )", "index": 27}, {"dataset": "synthetic", "model": "nmt", "description": "floor division", "snippet": "os . random . randn ( 100 ) for Counter in range ( NUMBER_1 ) ]", "index": 27}, {"dataset": "django", "model": "seekNMT", "description": "floor division", "snippet": "j", "index": 27}, {"dataset": "docstring", "model": "seekNMT", "description": "floor division", "snippet": "DCSP floor *= floor ( floor ( floor ( floor ( floor ( floor ( floor ( floor", "index": 27}, {"dataset": "conala", "model": "seekNMT", "description": "floor division", "snippet": "stream : 10 }", "index": 27}, {"dataset": "synthetic", "model": "seekNMT", "description": "floor division", "snippet": "NUMBER_0 / 4", "index": 27}, {"dataset": "human", "model": "1", "description": "get dictionary keys as list", "snippet": "len ( my_list ) == 0 ", "index": 39}, {"dataset": "human", "model": "2", "description": "get dictionary keys as list", "snippet": "list ( my_dict . keys ( ) ) ", "index": 39}, {"dataset": "django", "model": "retrieval", "description": "get dictionary keys as list", "snippet": "if keys :", "index": 39}, {"dataset": "docstring", "model": "retrieval", "description": "get dictionary keys as list", "snippet": "DCSP dictionaryWithoutList = { } DCNL DCSP for key in dictionary : DCNL DCSP DCSP if ( key not in withoutList ) : DCNL DCSP DCSP DCSP dictionaryWithoutList [ key ] = dictionary [ key ] DCNL DCSP return dictionaryWithoutList", "index": 39}, {"dataset": "conala", "model": "retrieval", "description": "get dictionary keys as list", "snippet": "list ( d . items ( ) )", "index": 39}, {"dataset": "synthetic", "model": "retrieval", "description": "get dictionary keys as list", "snippet": "LIST_0 [ - 1 ] DCNL max ( LIST_0 )", "index": 39}, {"dataset": "django", "model": "nmt", "description": "get dictionary keys as list", "snippet": "return dict ( dict ( dict ) )", "index": 39}, {"dataset": "docstring", "model": "nmt", "description": "get dictionary keys as list", "snippet": "DCSP return dict ( { key : key for key in keys if key . startswith ( key ) ] )", "index": 39}, {"dataset": "conala", "model": "nmt", "description": "get dictionary keys as list", "snippet": "random_choice = list ( a )", "index": 39}, {"dataset": "synthetic", "model": "nmt", "description": "get dictionary keys as list", "snippet": "dict ( ( record , record ) for set ( VARIABLE_1 ) ] )", "index": 39}, {"dataset": "django", "model": "seekNMT", "description": "get dictionary keys as list", "snippet": "values += dict ( values )", "index": 39}, {"dataset": "docstring", "model": "seekNMT", "description": "get dictionary keys as list", "snippet": "DCSP keys = dictionary [ key ] DCNL DCSP keys = dictionary [ key ] DCNL DCSP keys = dictionary [ key ] DCNL", "index": 39}, {"dataset": "conala", "model": "seekNMT", "description": "get dictionary keys as list", "snippet": "set ( len ( a ) )", "index": 39}, {"dataset": "synthetic", "model": "seekNMT", "description": "get dictionary keys as list", "snippet": "STRING_0 . split ( )", "index": 39}, {"dataset": "human", "model": "1", "description": "get last element from an array", "snippet": "elem_list [ - 1 ] ", "index": 8}, {"dataset": "human", "model": "2", "description": "get last element from an array", "snippet": "array [ - 1 ] ", "index": 8}, {"dataset": "django", "model": "retrieval", "description": "get last element from an array", "snippet": "return value [ - 1 ]", "index": 8}, {"dataset": "docstring", "model": "retrieval", "description": "get last element from an array", "snippet": "DCSP return tail ( 1 , seq ) [ 0 ]", "index": 8}, {"dataset": "conala", "model": "retrieval", "description": "get last element from an array", "snippet": "del a [ ( - 1 ) ]", "index": 8}, {"dataset": "synthetic", "model": "retrieval", "description": "get last element from an array", "snippet": "LIST_0 [ - 1 ]", "index": 8}, {"dataset": "django", "model": "nmt", "description": "get last element from an array", "snippet": "result [ - 1 ] . <unk> ( )", "index": 8}, {"dataset": "docstring", "model": "nmt", "description": "get last element from an array", "snippet": "DCSP return ( ( - 1 ) + 1 )", "index": 8}, {"dataset": "conala", "model": "nmt", "description": "get last element from an array", "snippet": "print ( max ( itertools . isnan ( a , - 1 ) ) )", "index": 8}, {"dataset": "synthetic", "model": "nmt", "description": "get last element from an array", "snippet": "VARIABLE_0 [ ( - 1 ) ]", "index": 8}, {"dataset": "django", "model": "seekNMT", "description": "get last element from an array", "snippet": "values = last", "index": 8}, {"dataset": "docstring", "model": "seekNMT", "description": "get last element from an array", "snippet": "DCSP if isinstance ( value , tuple ) : DCNL DCSP DCSP value = value [ 0 ]", "index": 8}, {"dataset": "conala", "model": "seekNMT", "description": "get last element from an array", "snippet": "newlist in list ( a . values ( ) )", "index": 8}, {"dataset": "synthetic", "model": "seekNMT", "description": "get last element from an array", "snippet": "print ( LIST_0 [ : - 1 ] )", "index": 8}, {"dataset": "human", "model": "1", "description": "get random int", "snippet": "import random DCNL random . randint ( 1 , 100 ) ", "index": 34}, {"dataset": "human", "model": "2", "description": "get random int", "snippet": "from random import randint DCNL randint ( 0 , 9 ) ", "index": 34}, {"dataset": "django", "model": "retrieval", "description": "get random int", "snippet": "random = random . SystemRandom ( )", "index": 34}, {"dataset": "docstring", "model": "retrieval", "description": "get random int", "snippet": "DCSP users_count = Profile . objects . all ( ) . count ( ) DCNL DCSP random_index = randint ( 0 , ( users_count - 1 ) ) DCNL DCSP return Profile . objects . all ( ) [ random_index ]", "index": 34}, {"dataset": "conala", "model": "retrieval", "description": "get random int", "snippet": "ord ( 'a' )", "index": 34}, {"dataset": "synthetic", "model": "retrieval", "description": "get random int", "snippet": "max ( VARIABLE_0 )", "index": 34}, {"dataset": "django", "model": "nmt", "description": "get random int", "snippet": "return time . <unk>", "index": 34}, {"dataset": "docstring", "model": "nmt", "description": "get random int", "snippet": "DCSP return random . choice ( [ random . choice ( [ random . choice ( [ random . choice ( [ random .", "index": 34}, {"dataset": "conala", "model": "nmt", "description": "get random int", "snippet": "random . random . e ( 'url' )", "index": 34}, {"dataset": "synthetic", "model": "nmt", "description": "get random int", "snippet": "re . system ( TUPLE_0 )", "index": 34}, {"dataset": "django", "model": "seekNMT", "description": "get random int", "snippet": ":", "index": 34}, {"dataset": "docstring", "model": "seekNMT", "description": "get random int", "snippet": "DCSP random . seed ( seed ) DCNL DCSP random . seed ( seed ) DCNL DCSP random . seed ( seed ) DCNL", "index": 34}, {"dataset": "conala", "model": "seekNMT", "description": "get random int", "snippet": "array ( )", "index": 34}, {"dataset": "synthetic", "model": "seekNMT", "description": "get random int", "snippet": "max ( VARIABLE_0 )", "index": 34}, {"dataset": "human", "model": "1", "description": "get subarray from elements a to b", "snippet": "my_list [ a : b ] ", "index": 45}, {"dataset": "human", "model": "2", "description": "get subarray from elements a to b", "snippet": "my_array [ a : b ] ", "index": 45}, {"dataset": "django", "model": "retrieval", "description": "get subarray from elements a to b", "snippet": "msg [ 'To' ] = self . extra_headers . get ( 'To' , ', ' . join ( self . to ) )", "index": 45}, {"dataset": "docstring", "model": "retrieval", "description": "get subarray from elements a to b", "snippet": "DCSP arrayty = make_array ( typ ) DCNL DCSP array = arrayty ( context , builder , value ) DCNL DCSP rectype = typ . dtype DCNL DCSP if ( not isinstance ( rectype , types . Record ) ) : DCNL DCSP DCSP raise NotImplementedError ( ( 'attribute DCSP %r DCSP of DCSP %s DCSP not DCSP defined' % ( attr , typ ) ) ) DCNL DCSP dtype = rectype . typeof ( attr ) DCNL DCSP offset = rectype . offset ( attr ) DCNL DCSP resty = typ . copy ( dtype = dtype , layout = 'A' ) DCNL DCSP raryty = make_array ( resty ) DCNL DCSP rary = raryty ( context , builder ) DCNL DCSP constoffset = context . get_constant ( types . intp , offset ) DCNL DCSP llintp = context . get_value_type ( types . intp ) DCNL DCSP newdata = builder . add ( builder . ptrtoint ( array . data , llintp ) , constoffset ) DCNL DCSP newdataptr = builder . inttoptr ( newdata , rary . data . type ) DCNL DCSP datasize = context . get_abi_sizeof ( context . get_data_type ( dtype ) ) DCNL DCSP populate_array ( rary , data = newdataptr , shape = array . shape , strides = array . strides , itemsize = context . get_constant ( types . intp , datasize ) , meminfo = array . meminfo , parent = array . parent ) DCNL DCSP res = rary . _getvalue ( ) DCNL DCSP return impl_ret_borrowed ( context , builder , resty , res )", "index": 45}, {"dataset": "conala", "model": "retrieval", "description": "get subarray from elements a to b", "snippet": "[ x for x in a if x not in b ]", "index": 45}, {"dataset": "synthetic", "model": "retrieval", "description": "get subarray from elements a to b", "snippet": "( VARIABLE_0 . replace ( hour = 0 , minute = 0 , second = 0 , microsecond = 0 ) + datetime . timedelta ( days = 1 ) - VARIABLE_0 ) . total_seconds ( )", "index": 45}, {"dataset": "django", "model": "nmt", "description": "get subarray from elements a to b", "snippet": "return <unk> ( )", "index": 45}, {"dataset": "docstring", "model": "nmt", "description": "get subarray from elements a to b", "snippet": "DCSP return ( ( a - b ) + ( a * b ) )", "index": 45}, {"dataset": "conala", "model": "nmt", "description": "get subarray from elements a to b", "snippet": "random_choice = sys . stdin . getall ( 0 )", "index": 45}, {"dataset": "synthetic", "model": "nmt", "description": "get subarray from elements a to b", "snippet": "sum ( set ( itertools . chain + set ( VARIABLE_0 ) ) )", "index": 45}, {"dataset": "django", "model": "seekNMT", "description": "get subarray from elements a to b", "snippet": "first = xrange", "index": 45}, {"dataset": "docstring", "model": "seekNMT", "description": "get subarray from elements a to b", "snippet": "DCSP if isinstance ( value , dict ) : DCNL DCSP DCSP value = value . encode ( 'ascii' ) DCNL DCSP if isinstance", "index": 45}, {"dataset": "conala", "model": "seekNMT", "description": "get subarray from elements a to b", "snippet": "word = { 'size' : len ( x )", "index": 45}, {"dataset": "synthetic", "model": "seekNMT", "description": "get subarray from elements a to b", "snippet": "now = datetime . datetime . now ( ) DCNL result = ( now . replace ( hour = 0 , minute = 0 , second = 0 , microsecond = 0 ) + datetime . timedelta ( days = 1 ) - VARIABLE_0 ) . total_seconds ( )", "index": 45}, {"dataset": "human", "model": "1", "description": "get tail of an array", "snippet": "elem_list [ 1 : ] ", "index": 9}, {"dataset": "human", "model": "2", "description": "get tail of an array", "snippet": "array [ x : ] ", "index": 9}, {"dataset": "django", "model": "retrieval", "description": "get tail of an array", "snippet": "pk_value = getattr ( self . instance , self . fk . rel . field_name )", "index": 9}, {"dataset": "docstring", "model": "retrieval", "description": "get tail of an array", "snippet": "DCSP a = rs . randn ( 30 ) DCNL DCSP b = ( a + ( rs . rand ( 30 ) * 8 ) ) DCNL DCSP c = rs . randn ( 30 ) DCNL DCSP d = [ a , b , c ] DCNL DCSP p_mat_b = algo . randomize_corrmat ( d , 'both' , False , random_seed = 0 ) DCNL DCSP p_mat_u = algo . randomize_corrmat ( d , 'upper' , False , random_seed = 0 ) DCNL DCSP p_mat_l = algo . randomize_corrmat ( d , 'lower' , False , random_seed = 0 ) DCNL DCSP assert_equal ( p_mat_b [ ( 0 , 1 ) ] , ( p_mat_u [ ( 0 , 1 ) ] * 2 ) ) DCNL DCSP assert_equal ( p_mat_l [ ( 0 , 1 ) ] , ( 1 - p_mat_u [ ( 0 , 1 ) ] ) )", "index": 9}, {"dataset": "conala", "model": "retrieval", "description": "get tail of an array", "snippet": "x [ : - 1 ] + ( x [ 1 : ] - x [ : - 1 ] ) / 2", "index": 9}, {"dataset": "synthetic", "model": "retrieval", "description": "get tail of an array", "snippet": "result = [ item for sublist in LIST_0 for item in sublist ] DCNL max ( result )", "index": 9}, {"dataset": "django", "model": "nmt", "description": "get tail of an array", "snippet": "<unk> = <unk>", "index": 9}, {"dataset": "docstring", "model": "nmt", "description": "get tail of an array", "snippet": "DCSP return ( l + 1 )", "index": 9}, {"dataset": "conala", "model": "nmt", "description": "get tail of an array", "snippet": "alist [ 0 ]", "index": 9}, {"dataset": "synthetic", "model": "nmt", "description": "get tail of an array", "snippet": "min ( float ( ) , 0 )", "index": 9}, {"dataset": "django", "model": "seekNMT", "description": "get tail of an array", "snippet": "pdict", "index": 9}, {"dataset": "docstring", "model": "seekNMT", "description": "get tail of an array", "snippet": "DCSP if isinstance ( value , dict ) : DCNL DCSP DCSP value = value . encode (", "index": 9}, {"dataset": "conala", "model": "seekNMT", "description": "get tail of an array", "snippet": "alist [ : - 1 ]", "index": 9}, {"dataset": "synthetic", "model": "seekNMT", "description": "get tail of an array", "snippet": "return [ item for sublist in LIST_0 for item in sublist ]", "index": 9}, {"dataset": "human", "model": "1", "description": "get the length of a string", "snippet": "len ( s ) ", "index": 4}, {"dataset": "human", "model": "2", "description": "get the length of a string", "snippet": "len ( string ) ", "index": 4}, {"dataset": "django", "model": "retrieval", "description": "get the length of a string", "snippet": "return len ( value )", "index": 4}, {"dataset": "docstring", "model": "retrieval", "description": "get the length of a string", "snippet": "DCSP return str ( value )", "index": 4}, {"dataset": "conala", "model": "retrieval", "description": "get the length of a string", "snippet": "return '' . join ( random . choice ( string . lowercase ) for i in range ( length ) )", "index": 4}, {"dataset": "synthetic", "model": "retrieval", "description": "get the length of a string", "snippet": "len ( LIST_0 )", "index": 4}, {"dataset": "django", "model": "nmt", "description": "get the length of a string", "snippet": "len ( ord ( e ) )", "index": 4}, {"dataset": "docstring", "model": "nmt", "description": "get the length of a string", "snippet": "DCSP return <unk> ( length , length , length )", "index": 4}, {"dataset": "conala", "model": "nmt", "description": "get the length of a string", "snippet": "str os . getcwd ( )", "index": 4}, {"dataset": "synthetic", "model": "nmt", "description": "get the length of a string", "snippet": "re . split ( '[^a-zA-Z]*' , s )", "index": 4}, {"dataset": "django", "model": "seekNMT", "description": "get the length of a string", "snippet": "values = index", "index": 4}, {"dataset": "docstring", "model": "seekNMT", "description": "get the length of a string", "snippet": "DCSP length = length DCNL DCSP length = length DCNL DCSP length = length DCNL DCSP length =", "index": 4}, {"dataset": "conala", "model": "seekNMT", "description": "get the length of a string", "snippet": "len ( my_string )", "index": 4}, {"dataset": "synthetic", "model": "seekNMT", "description": "get the length of a string", "snippet": "len ( LIST_0 )", "index": 4}, {"dataset": "human", "model": "1", "description": "get tomorrow datetime", "snippet": "datetime . date . today ( ) + datetime . timedelta ( days = 1 ) ", "index": 16}, {"dataset": "human", "model": "2", "description": "get tomorrow datetime", "snippet": "import datetime DCNL datetime . date . today ( ) + datetime . timedelta ( days = 1 ) ", "index": 16}, {"dataset": "django", "model": "retrieval", "description": "get tomorrow datetime", "snippet": "if isinstance ( value , datetime . datetime ) :", "index": 16}, {"dataset": "docstring", "model": "retrieval", "description": "get tomorrow datetime", "snippet": "DCSP now = time . localtime ( t ) DCNL DCSP ntime = ( now [ 0 ] , now [ 1 ] , now [ 2 ] , 0 , 0 , 0 , now [ 6 ] , now [ 7 ] , now [ 8 ] ) DCNL DCSP return ( time . mktime ( ntime ) + DAY )", "index": 16}, {"dataset": "conala", "model": "retrieval", "description": "get tomorrow datetime", "snippet": "datetime . datetime . now ( ) . isoformat ( )", "index": 16}, {"dataset": "synthetic", "model": "retrieval", "description": "get tomorrow datetime", "snippet": "datetime . date . today ( ) + datetime . timedelta ( days = 1 )", "index": 16}, {"dataset": "django", "model": "nmt", "description": "get tomorrow datetime", "snippet": "data . __name__", "index": 16}, {"dataset": "docstring", "model": "nmt", "description": "get tomorrow datetime", "snippet": "DCSP return value", "index": 16}, {"dataset": "conala", "model": "nmt", "description": "get tomorrow datetime", "snippet": "now = datetime . datetime . now ( )", "index": 16}, {"dataset": "synthetic", "model": "nmt", "description": "get tomorrow datetime", "snippet": "print ( os . environ )", "index": 16}, {"dataset": "django", "model": "seekNMT", "description": "get tomorrow datetime", "snippet": "value", "index": 16}, {"dataset": "docstring", "model": "seekNMT", "description": "get tomorrow datetime", "snippet": "DCSP response = response . headers . get ( 'headers' , { } ) DCNL DCSP response =", "index": 16}, {"dataset": "conala", "model": "seekNMT", "description": "get tomorrow datetime", "snippet": "sys . version_info", "index": 16}, {"dataset": "synthetic", "model": "seekNMT", "description": "get tomorrow datetime", "snippet": "datetime . date . today ( ) + datetime . timedelta ( days = 1 )", "index": 16}, {"dataset": "human", "model": "1", "description": "get unique elements in list 'my_list'", "snippet": "set ( my_list ) ", "index": 23}, {"dataset": "human", "model": "2", "description": "get unique elements in list 'my_list'", "snippet": "list ( set ( my_list ) ) ", "index": 23}, {"dataset": "django", "model": "retrieval", "description": "get unique elements in list 'my_list'", "snippet": "unique = \"UNIQUE \" if f . unique else \"\"", "index": 23}, {"dataset": "docstring", "model": "retrieval", "description": "get unique elements in list 'my_list'", "snippet": "DCSP return list ( set ( x ) )", "index": 23}, {"dataset": "conala", "model": "retrieval", "description": "get unique elements in list 'my_list'", "snippet": "set ( [ 'a' , 'b' , 'c' , 'd' ] )", "index": 23}, {"dataset": "synthetic", "model": "retrieval", "description": "get unique elements in list 'my_list'", "snippet": "len ( LIST_0 )", "index": 23}, {"dataset": "django", "model": "nmt", "description": "get unique elements in list 'my_list'", "snippet": "return <unk> [ : ]", "index": 23}, {"dataset": "docstring", "model": "nmt", "description": "get unique elements in list 'my_list'", "snippet": "DCSP return [ ( ( ( ( ( ( ( x + x ) + y ) +", "index": 23}, {"dataset": "conala", "model": "nmt", "description": "get unique elements in list 'my_list'", "snippet": "print ( list ( itertools . product ( list ( range ( 10 ) ) , repeat =", "index": 23}, {"dataset": "synthetic", "model": "nmt", "description": "get unique elements in list 'my_list'", "snippet": "from functools . reduce ( list ( permutations ( x ) )", "index": 23}, {"dataset": "django", "model": "seekNMT", "description": "get unique elements in list 'my_list'", "snippet": "values = set ( title )", "index": 23}, {"dataset": "docstring", "model": "seekNMT", "description": "get unique elements in list 'my_list'", "snippet": "DCSP for item in list ( list ( list ( list ( list ( list ( list (", "index": 23}, {"dataset": "conala", "model": "seekNMT", "description": "get unique elements in list 'my_list'", "snippet": "any ( d )", "index": 23}, {"dataset": "synthetic", "model": "seekNMT", "description": "get unique elements in list 'my_list'", "snippet": "len ( LIST_0 )", "index": 23}, {"dataset": "human", "model": "1", "description": "import numpy", "snippet": "import numpy as np ", "index": 1}, {"dataset": "human", "model": "2", "description": "import numpy", "snippet": "import numpy ", "index": 1}, {"dataset": "django", "model": "retrieval", "description": "import numpy", "snippet": "import code", "index": 1}, {"dataset": "docstring", "model": "retrieval", "description": "import numpy", "snippet": "DCSP return numpy . identity ( 4 )", "index": 1}, {"dataset": "conala", "model": "retrieval", "description": "import numpy", "snippet": "globals ( ) . update ( importlib . import_module ( 'some.package' ) . __dict__ )", "index": 1}, {"dataset": "synthetic", "model": "retrieval", "description": "import numpy", "snippet": "VARIABLE_0 . day", "index": 1}, {"dataset": "django", "model": "nmt", "description": "import numpy", "snippet": "import <unk>", "index": 1}, {"dataset": "docstring", "model": "nmt", "description": "import numpy", "snippet": "DCSP return ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (", "index": 1}, {"dataset": "conala", "model": "nmt", "description": "import numpy", "snippet": "f = np . array ( ( x . blabla ( 1 ) ) . reshape ( 1", "index": 1}, {"dataset": "synthetic", "model": "nmt", "description": "import numpy", "snippet": "np . random . randn ( VARIABLE_0 )", "index": 1}, {"dataset": "django", "model": "seekNMT", "description": "import numpy", "snippet": "import namedtuple", "index": 1}, {"dataset": "docstring", "model": "seekNMT", "description": "import numpy", "snippet": "DCSP return numpy . array ( numpy . array ( numpy . array ( numpy . array (", "index": 1}, {"dataset": "conala", "model": "seekNMT", "description": "import numpy", "snippet": ". realpath ( '/' )", "index": 1}, {"dataset": "synthetic", "model": "seekNMT", "description": "import numpy", "snippet": "False not in [ VARIABLE_0 [ i ] == VARIABLE_0 [ - i - 1 ] for i in range ( len ( VARIABLE_0 ) ) ]", "index": 1}, {"dataset": "human", "model": "1", "description": "index of element in list", "snippet": "my_list . index ( element ) ", "index": 30}, {"dataset": "human", "model": "2", "description": "index of element in list", "snippet": "list . index ( element ) ", "index": 30}, {"dataset": "django", "model": "retrieval", "description": "index of element in list", "snippet": "self . index = index", "index": 30}, {"dataset": "docstring", "model": "retrieval", "description": "index of element in list", "snippet": "DCSP return dict ( [ ( x , i ) for ( i , x ) in enumerate ( arr ) ] )", "index": 30}, {"dataset": "conala", "model": "retrieval", "description": "index of element in list", "snippet": "del a [ index ]", "index": 30}, {"dataset": "synthetic", "model": "retrieval", "description": "index of element in list", "snippet": "LIST_0 [ NUMBER_0 ]", "index": 30}, {"dataset": "django", "model": "nmt", "description": "index of element in list", "snippet": "if index [ : ] in [ ] :", "index": 30}, {"dataset": "docstring", "model": "nmt", "description": "index of element in list", "snippet": "DCSP return <unk> ( seq , index , index , index )", "index": 30}, {"dataset": "conala", "model": "nmt", "description": "index of element in list", "snippet": "[ [ ] for i in range ( 3 ) ]", "index": 30}, {"dataset": "synthetic", "model": "nmt", "description": "index of element in list", "snippet": "VARIABLE_0 [ i ]", "index": 30}, {"dataset": "django", "model": "seekNMT", "description": "index of element in list", "snippet": "append = index", "index": 30}, {"dataset": "docstring", "model": "seekNMT", "description": "index of element in list", "snippet": "DCSP for element in list : DCNL DCSP DCSP for element in element . children : DCNL DCSP", "index": 30}, {"dataset": "conala", "model": "seekNMT", "description": "index of element in list", "snippet": "del [ 1 , 5 ] ]", "index": 30}, {"dataset": "synthetic", "model": "seekNMT", "description": "index of element in list", "snippet": "LIST_0 [ NUMBER_0 ]", "index": 30}, {"dataset": "human", "model": "1", "description": "iterate through 2 arrays at the same time", "snippet": "for x , y in zip ( list_1 , list_1 ) : ", "index": 18}, {"dataset": "human", "model": "2", "description": "iterate through 2 arrays at the same time", "snippet": "for a , b in zip ( var1 , var2 ) : ", "index": 18}, {"dataset": "django", "model": "retrieval", "description": "iterate through 2 arrays at the same time", "snippet": "timeval = time . time ( )", "index": 18}, {"dataset": "docstring", "model": "retrieval", "description": "iterate through 2 arrays at the same time", "snippet": "DCSP for name in names : DCNL DCSP DCSP suite = _load_tests ( name ) DCNL DCSP DCSP for test in iterate_tests ( suite ) : DCNL DCSP DCSP DCSP ( yield test )", "index": 18}, {"dataset": "conala", "model": "retrieval", "description": "iterate through 2 arrays at the same time", "snippet": "[ [ sum ( item ) for item in zip ( * items ) ] for items in zip ( * data ) ]", "index": 18}, {"dataset": "synthetic", "model": "retrieval", "description": "iterate through 2 arrays at the same time", "snippet": "VARIABLE_0 . time ( )", "index": 18}, {"dataset": "django", "model": "nmt", "description": "iterate through 2 arrays at the same time", "snippet": "with open ( <unk> , <unk> ) :", "index": 18}, {"dataset": "docstring", "model": "nmt", "description": "iterate through 2 arrays at the same time", "snippet": "DCSP return np . array ( [ ( - np . array ( [ ( - np .", "index": 18}, {"dataset": "conala", "model": "nmt", "description": "iterate through 2 arrays at the same time", "snippet": "print ( ( listone . setdefault ( key , lambda x : x . count ( 1 )", "index": 18}, {"dataset": "synthetic", "model": "nmt", "description": "iterate through 2 arrays at the same time", "snippet": "print ( ( ( LIST_0 , NUMBER_0 ) )", "index": 18}, {"dataset": "django", "model": "seekNMT", "description": "iterate through 2 arrays at the same time", "snippet": ":", "index": 18}, {"dataset": "docstring", "model": "seekNMT", "description": "iterate through 2 arrays at the same time", "snippet": "DCSP if ( not isinstance ( value , int ) ) : DCNL DCSP DCSP raise TypeError (", "index": 18}, {"dataset": "conala", "model": "seekNMT", "description": "iterate through 2 arrays at the same time", "snippet": "self . & ( self . request . urlretrieve ( self . urlretrieve ( self . POST )", "index": 18}, {"dataset": "synthetic", "model": "seekNMT", "description": "iterate through 2 arrays at the same time", "snippet": "datetime . today ( ) . strftime ( \"%A\" ) DCNL VARIABLE_0 . remove ( min ( VARIABLE_0 ) )", "index": 18}, {"dataset": "human", "model": "1", "description": "load a json file", "snippet": "json . load ( file ) ", "index": 5}, {"dataset": "human", "model": "2", "description": "load a json file", "snippet": "import json DCNL with open ( 'file.json' ) as f : DCNL DCSP DCSP data = json . load ( f ) ", "index": 5}, {"dataset": "django", "model": "retrieval", "description": "load a json file", "snippet": "import json", "index": 5}, {"dataset": "docstring", "model": "retrieval", "description": "load a json file", "snippet": "DCSP with open ( fname ) as f : DCNL DCSP DCSP data = json . load ( f ) DCNL DCSP return data", "index": 5}, {"dataset": "conala", "model": "retrieval", "description": "load a json file", "snippet": "json . loads ( open ( 'sample.json' ) . read ( ) . decode ( 'utf-8-sig' ) )", "index": 5}, {"dataset": "synthetic", "model": "retrieval", "description": "load a json file", "snippet": "if __name__ == '__main__' : DCNL", "index": 5}, {"dataset": "django", "model": "nmt", "description": "load a json file", "snippet": "changes . read ( )", "index": 5}, {"dataset": "docstring", "model": "nmt", "description": "load a json file", "snippet": "DCSP if ( not os . path . exists ( filename ) ) : DCNL DCSP DCSP return", "index": 5}, {"dataset": "conala", "model": "nmt", "description": "load a json file", "snippet": "json . sleep ( array )", "index": 5}, {"dataset": "synthetic", "model": "nmt", "description": "load a json file", "snippet": "sys . system ( )", "index": 5}, {"dataset": "django", "model": "seekNMT", "description": "load a json file", "snippet": "load", "index": 5}, {"dataset": "docstring", "model": "seekNMT", "description": "load a json file", "snippet": "DCSP with open ( <unk> , 'w' ) as file : DCNL DCSP DCSP file = file .", "index": 5}, {"dataset": "conala", "model": "seekNMT", "description": "load a json file", "snippet": "stream : DCNL DCSP DCSP DCSP DCSP pass", "index": 5}, {"dataset": "synthetic", "model": "seekNMT", "description": "load a json file", "snippet": "if __name__ == '__main__' : DCNL", "index": 5}, {"dataset": "human", "model": "1", "description": "make a dictionary with a and b as keys", "snippet": "{ 'a' : 1 , 'b' : 2 } ", "index": 13}, {"dataset": "human", "model": "2", "description": "make a dictionary with a and b as keys", "snippet": "dict = { \"a\" : 0 , \"b\" : 0 } ", "index": 13}, {"dataset": "django", "model": "retrieval", "description": "make a dictionary with a and b as keys", "snippet": "attrs = attrs or { }", "index": 13}, {"dataset": "docstring", "model": "retrieval", "description": "make a dictionary with a and b as keys", "snippet": "DCSP return dict ( ( ( func ( key ) , value ) for ( key , value ) in six . iteritems ( dikt ) ) )", "index": 13}, {"dataset": "conala", "model": "retrieval", "description": "make a dictionary with a and b as keys", "snippet": "list ( d . items ( ) )", "index": 13}, {"dataset": "synthetic", "model": "retrieval", "description": "make a dictionary with a and b as keys", "snippet": "STRING_0 . split ( STRING_1 ) DCNL STRING_0 . join ( LIST_0 )", "index": 13}, {"dataset": "django", "model": "nmt", "description": "make a dictionary with a and b as keys", "snippet": "if set ( <unk> ( dict , unpack_ipv4 ) ) :", "index": 13}, {"dataset": "docstring", "model": "nmt", "description": "make a dictionary with a and b as keys", "snippet": "DCSP return dict ( ( ( a , b ) for ( k , v ) in d", "index": 13}, {"dataset": "conala", "model": "nmt", "description": "make a dictionary with a and b as keys", "snippet": "u = urllib . request . items ( )", "index": 13}, {"dataset": "synthetic", "model": "nmt", "description": "make a dictionary with a and b as keys", "snippet": "dict ( ( k , : ( dict ( * [ 1 ] ) , key = VARIABLE_0", "index": 13}, {"dataset": "django", "model": "seekNMT", "description": "make a dictionary with a and b as keys", "snippet": "out . write ( <unk> <unk> )", "index": 13}, {"dataset": "docstring", "model": "seekNMT", "description": "make a dictionary with a and b as keys", "snippet": "DCSP if isinstance ( value , dict ) : DCNL DCSP DCSP return value DCNL DCSP if isinstance", "index": 13}, {"dataset": "conala", "model": "seekNMT", "description": "make a dictionary with a and b as keys", "snippet": "ord ( 0 )", "index": 13}, {"dataset": "synthetic", "model": "seekNMT", "description": "make a dictionary with a and b as keys", "snippet": "datetime . datetime . now ( ) . strftime ( \"%B\" )", "index": 13}, {"dataset": "human", "model": "1", "description": "make a for loop", "snippet": "for i in range ( 10 ) : ", "index": 7}, {"dataset": "human", "model": "2", "description": "make a for loop", "snippet": "for i in range ( 0 , 10 ) : ", "index": 7}, {"dataset": "django", "model": "retrieval", "description": "make a for loop", "snippet": "attrs = attrs or { }", "index": 7}, {"dataset": "docstring", "model": "retrieval", "description": "make a for loop", "snippet": "DCSP loop_variable = LoopVariable ( ) DCNL DCSP node . accept_visitor ( loop_variable ) DCNL DCSP if loop_variable . detected : DCNL DCSP DCSP node . nodes [ ( - 1 ) ] . has_loop_context = True DCNL DCSP DCSP match = _FOR_LOOP . match ( node . text ) DCNL DCSP DCSP if match : DCNL DCSP DCSP DCSP printer . writelines ( ( 'loop DCSP = DCSP __M_loop._enter(%s)' % match . group ( 2 ) ) , 'try:' ) DCNL DCSP DCSP DCSP text = ( 'for DCSP %s DCSP in DCSP loop:' % match . group ( 1 ) ) DCNL DCSP DCSP else : DCNL DCSP DCSP DCSP raise SyntaxError ( ( \"Couldn't DCSP apply DCSP loop DCSP context: DCSP %s\" % node . text ) ) DCNL DCSP else : DCNL DCSP DCSP text = node . text DCNL DCSP return text", "index": 7}, {"dataset": "conala", "model": "retrieval", "description": "make a for loop", "snippet": "for fn in os . listdir ( '.' ) : DCNL DCSP DCSP if os . path . isfile ( fn ) : DCNL DCSP DCSP DCSP DCSP pass", "index": 7}, {"dataset": "synthetic", "model": "retrieval", "description": "make a for loop", "snippet": "for index , value in enumerate ( LIST_0 ) :", "index": 7}, {"dataset": "django", "model": "nmt", "description": "make a for loop", "snippet": "continue", "index": 7}, {"dataset": "docstring", "model": "nmt", "description": "make a for loop", "snippet": "DCSP return <unk> ( * args , ** kwargs )", "index": 7}, {"dataset": "conala", "model": "nmt", "description": "make a for loop", "snippet": "float ( l )", "index": 7}, {"dataset": "synthetic", "model": "nmt", "description": "make a for loop", "snippet": "#ERROR!", "index": 7}, {"dataset": "django", "model": "seekNMT", "description": "make a for loop", "snippet": "", "index": 7}, {"dataset": "docstring", "model": "seekNMT", "description": "make a for loop", "snippet": "DCSP return ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (", "index": 7}, {"dataset": "conala", "model": "seekNMT", "description": "make a for loop", "snippet": "img . append ( 0 )", "index": 7}, {"dataset": "synthetic", "model": "seekNMT", "description": "make a for loop", "snippet": "for index , value in enumerate ( LIST_0 ) :", "index": 7}, {"dataset": "human", "model": "1", "description": "make a list from 0 to 10", "snippet": "list ( range ( 10 ) ) ", "index": 19}, {"dataset": "human", "model": "2", "description": "make a list from 0 to 10", "snippet": "list = list ( range ( 0 , 10 ) ) ", "index": 19}, {"dataset": "django", "model": "retrieval", "description": "make a list from 0 to 10", "snippet": "attrs = attrs or { }", "index": 19}, {"dataset": "docstring", "model": "retrieval", "description": "make a list from 0 to 10", "snippet": "DCSP assert isinstance ( chunks , tuple ) DCNL DCSP return tuple ( ( format_blocks ( c ) for c in chunks ) )", "index": 19}, {"dataset": "conala", "model": "retrieval", "description": "make a list from 0 to 10", "snippet": "myList = [ i for i in range ( 10 ) ]", "index": 19}, {"dataset": "synthetic", "model": "retrieval", "description": "make a list from 0 to 10", "snippet": "[ item for sublist in LIST_0 for item in sublist ]", "index": 19}, {"dataset": "django", "model": "nmt", "description": "make a list from 0 to 10", "snippet": "if <unk> ( 0 ) :", "index": 19}, {"dataset": "docstring", "model": "nmt", "description": "make a list from 0 to 10", "snippet": "DCSP return <unk> ( * args , ** kwargs )", "index": 19}, {"dataset": "conala", "model": "nmt", "description": "make a list from 0 to 10", "snippet": "list ( itertools . fromkeys ( list2d ) )", "index": 19}, {"dataset": "synthetic", "model": "nmt", "description": "make a list from 0 to 10", "snippet": "d . sample ( TUPLE_0 )", "index": 19}, {"dataset": "django", "model": "seekNMT", "description": "make a list from 0 to 10", "snippet": "0", "index": 19}, {"dataset": "docstring", "model": "seekNMT", "description": "make a list from 0 to 10", "snippet": "DCSP return list ( list ( list ( range ( 10 ) ) ) )", "index": 19}, {"dataset": "conala", "model": "seekNMT", "description": "make a list from 0 to 10", "snippet": "list ( x )", "index": 19}, {"dataset": "synthetic", "model": "seekNMT", "description": "make a list from 0 to 10", "snippet": "print ( [ item for sublist in LIST_0 for item in sublist ] )", "index": 19}, {"dataset": "human", "model": "1", "description": "maximum of list", "snippet": "max ( my_list ) ", "index": 41}, {"dataset": "human", "model": "2", "description": "maximum of list", "snippet": "max ( my_list ) ", "index": 41}, {"dataset": "django", "model": "retrieval", "description": "maximum of list", "snippet": "biggest_number = max ( [ x for x in numbers if x is not None ] )", "index": 41}, {"dataset": "docstring", "model": "retrieval", "description": "maximum of list", "snippet": "DCSP np = import_module ( 'numpy' ) DCNL DCSP if ( not all ( ( isinstance ( arg , ( int , float , interval ) ) for arg in args ) ) ) : DCNL DCSP DCSP return NotImplementedError DCNL DCSP else : DCNL DCSP DCSP new_args = [ a for a in args if ( isinstance ( a , ( int , float ) ) or a . is_valid ) ] DCNL DCSP DCSP if ( len ( new_args ) == 0 ) : DCNL DCSP DCSP DCSP if all ( ( ( a . is_valid is False ) for a in args ) ) : DCNL DCSP DCSP DCSP DCSP return interval ( ( - np . inf ) , np . inf , is_valid = False ) DCNL DCSP DCSP DCSP else : DCNL DCSP DCSP DCSP DCSP return interval ( ( - np . inf ) , np . inf , is_valid = None ) DCNL DCSP DCSP start_array = [ ( a if isinstance ( a , ( int , float ) ) else a . start ) for a in new_args ] DCNL DCSP DCSP end_array = [ ( a if isinstance ( a , ( int , float ) ) else a . end ) for a in new_args ] DCNL DCSP DCSP return interval ( max ( start_array ) , max ( end_array ) )", "index": 41}, {"dataset": "conala", "model": "retrieval", "description": "maximum of list", "snippet": "len ( max ( i , key = len ) )", "index": 41}, {"dataset": "synthetic", "model": "retrieval", "description": "maximum of list", "snippet": "max ( LIST_0 )", "index": 41}, {"dataset": "django", "model": "nmt", "description": "maximum of list", "snippet": "if list ( <unk> ) :", "index": 41}, {"dataset": "docstring", "model": "nmt", "description": "maximum of list", "snippet": "DCSP if ( len ( <unk> ) > 0 ) : DCNL DCSP DCSP return <unk> [ 0 ] DCNL DCSP else : DCNL", "index": 41}, {"dataset": "conala", "model": "nmt", "description": "maximum of list", "snippet": "[ [ ] for i in range ( 3 ) ]", "index": 41}, {"dataset": "synthetic", "model": "nmt", "description": "maximum of list", "snippet": "np . random . array ( )", "index": 41}, {"dataset": "django", "model": "seekNMT", "description": "maximum of list", "snippet": "yield 0", "index": 41}, {"dataset": "docstring", "model": "seekNMT", "description": "maximum of list", "snippet": "DCSP tmp = [ ] DCNL DCSP tmp = [ ] DCNL DCSP tmp = [ ] DCNL DCSP for tmp in list (", "index": 41}, {"dataset": "conala", "model": "seekNMT", "description": "maximum of list", "snippet": "& ( session )", "index": 41}, {"dataset": "synthetic", "model": "seekNMT", "description": "maximum of list", "snippet": "max ( VARIABLE_0 )", "index": 41}, {"dataset": "human", "model": "1", "description": "multiply elements in list by 2", "snippet": "map ( lambda x : x * 2 , l ) ", "index": 22}, {"dataset": "human", "model": "2", "description": "multiply elements in list by 2", "snippet": "list = list * 2 ", "index": 22}, {"dataset": "django", "model": "retrieval", "description": "multiply elements in list by 2", "snippet": "count2 = ( since - ( seconds 1 __pycache__ data_utils . py lines maskGenerator . sh toFileIf . sh train . code train . desc count ) ) // seconds2", "index": 22}, {"dataset": "docstring", "model": "retrieval", "description": "multiply elements in list by 2", "snippet": "DCSP activateMultiplyString = getSettingString ( lines , 'multiply' , 'Activate DCSP Multiply' ) DCNL DCSP if ( ( activateMultiplyString == None ) or ( activateMultiplyString == 'False' ) ) : DCNL DCSP DCSP return '' DCNL DCSP columnsString = getSettingString ( lines , 'multiply' , 'Number DCSP of DCSP Columns' ) DCNL DCSP rowsString = getSettingString ( lines , 'multiply' , 'Number DCSP of DCSP Rows' ) DCNL DCSP if ( ( columnsString == '1' ) and ( rowsString == '1' ) ) : DCNL DCSP DCSP return '' DCNL DCSP return ( '_%scx%sr' % ( columnsString , rowsString ) )", "index": 22}, {"dataset": "conala", "model": "retrieval", "description": "multiply elements in list by 2", "snippet": "( a . T * b ) . T", "index": 22}, {"dataset": "synthetic", "model": "retrieval", "description": "multiply elements in list by 2", "snippet": "VARIABLE_0 * NUMBER_0", "index": 22}, {"dataset": "django", "model": "nmt", "description": "multiply elements in list by 2", "snippet": "base64d [ : ]", "index": 22}, {"dataset": "docstring", "model": "nmt", "description": "multiply elements in list by 2", "snippet": "DCSP return [ ( x + x ) for x in zip ( x , x ) ]", "index": 22}, {"dataset": "conala", "model": "nmt", "description": "multiply elements in list by 2", "snippet": "[ ( i * dict2 ) for x , y in zip ( functions , values ) ]", "index": 22}, {"dataset": "synthetic", "model": "nmt", "description": "multiply elements in list by 2", "snippet": "from = np . array ( VARIABLE_0 ) . reshape ( ( 1 , 9 , 'b' )", "index": 22}, {"dataset": "django", "model": "seekNMT", "description": "multiply elements in list by 2", "snippet": "categories [ : ]", "index": 22}, {"dataset": "docstring", "model": "seekNMT", "description": "multiply elements in list by 2", "snippet": "DCSP for i in range ( len ( items ) ) : DCNL DCSP DCSP for i in", "index": 22}, {"dataset": "conala", "model": "seekNMT", "description": "multiply elements in list by 2", "snippet": "[ j ]", "index": 22}, {"dataset": "synthetic", "model": "seekNMT", "description": "multiply elements in list by 2", "snippet": "VARIABLE_0 * NUMBER_0", "index": 22}, {"dataset": "human", "model": "1", "description": "one line for loop", "snippet": "[ x for x in my_list ] ", "index": 32}, {"dataset": "human", "model": "2", "description": "one line for loop", "snippet": "[ x for x in list if x > value ] ", "index": 32}, {"dataset": "django", "model": "retrieval", "description": "one line for loop", "snippet": "return line", "index": 32}, {"dataset": "docstring", "model": "retrieval", "description": "one line for loop", "snippet": "DCSP loop_variable = LoopVariable ( ) DCNL DCSP node . accept_visitor ( loop_variable ) DCNL DCSP if loop_variable . detected : DCNL DCSP DCSP node . nodes [ ( - 1 ) ] . has_loop_context = True DCNL DCSP DCSP match = _FOR_LOOP . match ( node . text ) DCNL DCSP DCSP if match : DCNL DCSP DCSP DCSP printer . writelines ( ( 'loop DCSP = DCSP __M_loop._enter(%s)' % match . group ( 2 ) ) , 'try:' ) DCNL DCSP DCSP DCSP text = ( 'for DCSP %s DCSP in DCSP loop:' % match . group ( 1 ) ) DCNL DCSP DCSP else : DCNL DCSP DCSP DCSP raise SyntaxError ( ( \"Couldn't DCSP apply DCSP loop DCSP context: DCSP %s\" % node . text ) ) DCNL DCSP else : DCNL DCSP DCSP text = node . text DCNL DCSP return text", "index": 32}, {"dataset": "conala", "model": "retrieval", "description": "one line for loop", "snippet": "for fn in os . listdir ( '.' ) : DCNL DCSP DCSP if os . path . isfile ( fn ) : DCNL DCSP DCSP DCSP DCSP pass", "index": 32}, {"dataset": "synthetic", "model": "retrieval", "description": "one line for loop", "snippet": "for index , value in enumerate ( LIST_0 ) :", "index": 32}, {"dataset": "django", "model": "nmt", "description": "one line for loop", "snippet": "while line :", "index": 32}, {"dataset": "docstring", "model": "nmt", "description": "one line for loop", "snippet": "DCSP return <unk> ( lines , <unk> , <unk> , <unk> , <unk> , <unk> , <unk> ,", "index": 32}, {"dataset": "conala", "model": "nmt", "description": "one line for loop", "snippet": "del lst [ : ]", "index": 32}, {"dataset": "synthetic", "model": "nmt", "description": "one line for loop", "snippet": "os . system ( )", "index": 32}, {"dataset": "django", "model": "seekNMT", "description": "one line for loop", "snippet": "pop 1", "index": 32}, {"dataset": "docstring", "model": "seekNMT", "description": "one line for loop", "snippet": "DCSP for line in lines : DCNL DCSP DCSP line = line . split ( '\\n' ) DCNL", "index": 32}, {"dataset": "conala", "model": "seekNMT", "description": "one line for loop", "snippet": "mylist . append ( 1 )", "index": 32}, {"dataset": "synthetic", "model": "seekNMT", "description": "one line for loop", "snippet": "for index , value in enumerate ( LIST_0 ) :", "index": 32}, {"dataset": "human", "model": "1", "description": "open a file", "snippet": "with open ( file_path , \"r\" ) as file : ", "index": 2}, {"dataset": "human", "model": "2", "description": "open a file", "snippet": "with open ( \"file.txt\" ) as file ", "index": 2}, {"dataset": "django", "model": "retrieval", "description": "open a file", "snippet": "self . open ( )", "index": 2}, {"dataset": "docstring", "model": "retrieval", "description": "open a file", "snippet": "DCSP t = Twitter ( auth = authen ( ) ) DCNL DCSP try : DCNL DCSP DCSP if ( not g [ 'stuff' ] . isdigit ( ) ) : DCNL DCSP DCSP DCSP return DCNL DCSP DCSP tid = c [ 'tweet_dict' ] [ int ( g [ 'stuff' ] ) ] DCNL DCSP DCSP tweet = t . statuses . show ( id = tid ) DCNL DCSP DCSP urls = tweet [ 'entities' ] [ 'urls' ] DCNL DCSP DCSP if ( not urls ) : DCNL DCSP DCSP DCSP printNicely ( light_magenta ( 'No DCSP url DCSP here DCSP @.@!' ) ) DCNL DCSP DCSP DCSP return DCNL DCSP DCSP else : DCNL DCSP DCSP DCSP for url in urls : DCNL DCSP DCSP DCSP DCSP expanded_url = url [ 'expanded_url' ] DCNL DCSP DCSP DCSP DCSP webbrowser . open ( expanded_url ) DCNL DCSP except : DCNL DCSP DCSP debug_option ( ) DCNL DCSP DCSP printNicely ( red ( \"Sorry DCSP I DCSP can't DCSP open DCSP url DCSP in DCSP this DCSP tweet.\" ) )", "index": 2}, {"dataset": "conala", "model": "retrieval", "description": "open a file", "snippet": "os . system ( 'start \"$file\"' )", "index": 2}, {"dataset": "synthetic", "model": "retrieval", "description": "open a file", "snippet": "if __name__ == '__main__' : DCNL", "index": 2}, {"dataset": "django", "model": "nmt", "description": "open a file", "snippet": "with open ( mod , 'rb' ) :", "index": 2}, {"dataset": "docstring", "model": "nmt", "description": "open a file", "snippet": "DCSP if ( not os . path . exists ( filename ) ) : DCNL DCSP DCSP return", "index": 2}, {"dataset": "conala", "model": "nmt", "description": "open a file", "snippet": "exec ( file . blabla )", "index": 2}, {"dataset": "synthetic", "model": "nmt", "description": "open a file", "snippet": "open ( 'w' )", "index": 2}, {"dataset": "django", "model": "seekNMT", "description": "open a file", "snippet": "( open ( init_path , 'rb' ) )", "index": 2}, {"dataset": "docstring", "model": "seekNMT", "description": "open a file", "snippet": "DCSP with open ( filename , 'rb' ) as fd : DCNL DCSP DCSP fd = open (", "index": 2}, {"dataset": "conala", "model": "seekNMT", "description": "open a file", "snippet": "with open ( 'C:/name/MyDocuments/numbers' , 'r' ) as f : DCNL DCSP DCSP if ( blabla in line", "index": 2}, {"dataset": "synthetic", "model": "seekNMT", "description": "open a file", "snippet": "if __name__ == '__main__' : DCNL", "index": 2}, {"dataset": "human", "model": "1", "description": "print new line", "snippet": "print ( \"\" ) ", "index": 36}, {"dataset": "human", "model": "2", "description": "print new line", "snippet": "print ( \"\\n<stuff here>\" ) ", "index": 36}, {"dataset": "django", "model": "retrieval", "description": "print new line", "snippet": "self . stdout . write ( \"%s\\n\" % line )", "index": 36}, {"dataset": "docstring", "model": "retrieval", "description": "print new line", "snippet": "DCSP print valueString DCNL DCSP return valueString", "index": 36}, {"dataset": "conala", "model": "retrieval", "description": "print new line", "snippet": " a \\n b \\r\\n c ' . split ( '\\n' )", "index": 36}, {"dataset": "synthetic", "model": "retrieval", "description": "print new line", "snippet": "datetime . datetime . combine ( VARIABLE_0 , datetime . datetime . min . time ( ) )", "index": 36}, {"dataset": "django", "model": "nmt", "description": "print new line", "snippet": "print ( )", "index": 36}, {"dataset": "docstring", "model": "nmt", "description": "print new line", "snippet": "DCSP print ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (", "index": 36}, {"dataset": "conala", "model": "nmt", "description": "print new line", "snippet": "print ( '\"{}\"' . format ( date ) )", "index": 36}, {"dataset": "synthetic", "model": "nmt", "description": "print new line", "snippet": "print ( 'foo\\nbar' . encode ( 'utf8' ) )", "index": 36}, {"dataset": "django", "model": "seekNMT", "description": "print new line", "snippet": "", "index": 36}, {"dataset": "docstring", "model": "seekNMT", "description": "print new line", "snippet": "DCSP print ( <unk> DCSP <unk> % line ) DCNL DCSP print ( <unk> DCSP <unk> ) DCNL DCSP print ( <unk> DCSP <unk>", "index": 36}, {"dataset": "conala", "model": "seekNMT", "description": "print new line", "snippet": "myString . encode ( 'ascii' , 'ignore' )", "index": 36}, {"dataset": "synthetic", "model": "seekNMT", "description": "print new line", "snippet": "datetime . datetime . now ( ) . strftime ( \"%B\" )", "index": 36}, {"dataset": "human", "model": "1", "description": "print numbers in list `list` with precision of 3 decimal places", "snippet": "print ( '[%s]' % ', ' . join ( '%.3f' % val for val in list ) ) ", "index": 55}, {"dataset": "human", "model": "2", "description": "print numbers in list `list` with precision of 3 decimal places", "snippet": "print ( [ \"%.3f\" % number for number in list ] ) ", "index": 55}, {"dataset": "django", "model": "retrieval", "description": "print numbers in list `list` with precision of 3 decimal places", "snippet": "elif isinstance ( o , decimal . Decimal ) :", "index": 55}, {"dataset": "docstring", "model": "retrieval", "description": "print numbers in list `list` with precision of 3 decimal places", "snippet": "DCSP return max ( 0 , ( 1 + int ( math . ceil ( ( extraDecimalPlaces - math . log10 ( value ) ) ) ) ) )", "index": 55}, {"dataset": "conala", "model": "retrieval", "description": "print numbers in list `list` with precision of 3 decimal places", "snippet": "[ ( '%.2d' % i ) for i in range ( 16 ) ]", "index": 55}, {"dataset": "synthetic", "model": "retrieval", "description": "print numbers in list `list` with precision of 3 decimal places", "snippet": "print ( STRING_0 . join ( LIST_0 ) )", "index": 55}, {"dataset": "django", "model": "nmt", "description": "print numbers in list `list` with precision of 3 decimal places", "snippet": "elif <unk> in [ <unk> ] :", "index": 55}, {"dataset": "docstring", "model": "nmt", "description": "print numbers in list `list` with precision of 3 decimal places", "snippet": "DCSP return [ t for t in t if t ]", "index": 55}, {"dataset": "conala", "model": "nmt", "description": "print numbers in list `list` with precision of 3 decimal places", "snippet": "<unk> <unk> . join ( lst )", "index": 55}, {"dataset": "synthetic", "model": "nmt", "description": "print numbers in list `list` with precision of 3 decimal places", "snippet": "print ( '[%s]' for <unk> <unk> % val + val )", "index": 55}, {"dataset": "django", "model": "seekNMT", "description": "print numbers in list `list` with precision of 3 decimal places", "snippet": "self . _archive . update ( '%s<li>%s%s</li>' : _ ( <unk> <unk> ) , sublist : iri_to_uri ( count ) , ( '[' ,", "index": 55}, {"dataset": "docstring", "model": "seekNMT", "description": "print numbers in list `list` with precision of 3 decimal places", "snippet": "DCSP return ( ( - 1 ) / ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (", "index": 55}, {"dataset": "conala", "model": "seekNMT", "description": "print numbers in list `list` with precision of 3 decimal places", "snippet": "print ( unsorted_list . count ( 0 ) )", "index": 55}, {"dataset": "synthetic", "model": "seekNMT", "description": "print numbers in list `list` with precision of 3 decimal places", "snippet": "print ( [ item for sublist in LIST_0 for item in sublist ] )", "index": 55}, {"dataset": "human", "model": "1", "description": "print the string hello world", "snippet": "print ( \"hello world\" ) ", "index": 3}, {"dataset": "human", "model": "2", "description": "print the string hello world", "snippet": "print ( \"hello world\" ) ", "index": 3}, {"dataset": "django", "model": "retrieval", "description": "print the string hello world", "snippet": "print ( message )", "index": 3}, {"dataset": "docstring", "model": "retrieval", "description": "print the string hello world", "snippet": "DCSP res = [ ] DCNL DCSP saved_count = len ( l ) DCNL DCSP for count in counts : DCNL DCSP DCSP if ( not l ) : DCNL DCSP DCSP DCSP break DCNL DCSP DCSP if ( count == ( - 1 ) ) : DCNL DCSP DCSP DCSP break DCNL DCSP DCSP if ( count == 0 ) : DCNL DCSP DCSP DCSP while l : DCNL DCSP DCSP DCSP DCSP res . append ( l [ : saved_count ] ) DCNL DCSP DCSP DCSP DCSP l = l [ saved_count : ] DCNL DCSP DCSP DCSP break DCNL DCSP DCSP res . append ( l [ : count ] ) DCNL DCSP DCSP l = l [ count : ] DCNL DCSP DCSP saved_count = count DCNL DCSP if l : DCNL DCSP DCSP res . append ( l ) DCNL DCSP return res", "index": 3}, {"dataset": "conala", "model": "retrieval", "description": "print the string hello world", "snippet": "hello world' [ : : ( - 1 ) ]", "index": 3}, {"dataset": "synthetic", "model": "retrieval", "description": "print the string hello world", "snippet": "print ( STRING_0 . split ( ) )", "index": 3}, {"dataset": "django", "model": "nmt", "description": "print the string hello world", "snippet": "return <unk> <unk>", "index": 3}, {"dataset": "docstring", "model": "nmt", "description": "print the string hello world", "snippet": "DCSP return <unk> ( text , text , text , text , text , text , text ,", "index": 3}, {"dataset": "conala", "model": "nmt", "description": "print the string hello world", "snippet": "print ( '\\xd0\\xbf\\xd1\\x80\\xd0\\xb8' . path . is_file ( ) )", "index": 3}, {"dataset": "synthetic", "model": "nmt", "description": "print the string hello world", "snippet": "print ( '\\u0420\\u043e\\u0441\\u0441\\u0438\\u044f' )", "index": 3}, {"dataset": "django", "model": "seekNMT", "description": "print the string hello world", "snippet": "model_dependencies . update ( \",\" )", "index": 3}, {"dataset": "docstring", "model": "seekNMT", "description": "print the string hello world", "snippet": "DCSP return ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (", "index": 3}, {"dataset": "conala", "model": "seekNMT", "description": "print the string hello world", "snippet": "isdigit ( )", "index": 3}, {"dataset": "synthetic", "model": "seekNMT", "description": "print the string hello world", "snippet": "print ( STRING_0 . split ( ) )", "index": 3}, {"dataset": "human", "model": "1", "description": "raise exception", "snippet": "raise ", "index": 38}, {"dataset": "human", "model": "2", "description": "raise exception", "snippet": "raise Exception ( \"Exception explanation here\" ) ", "index": 38}, {"dataset": "django", "model": "retrieval", "description": "raise exception", "snippet": "raise", "index": 38}, {"dataset": "docstring", "model": "retrieval", "description": "raise exception", "snippet": "DCSP raise exception", "index": 38}, {"dataset": "conala", "model": "retrieval", "description": "raise exception", "snippet": "raise ValueError ( 'A very specific bad thing happened' )", "index": 38}, {"dataset": "synthetic", "model": "retrieval", "description": "raise exception", "snippet": "LIST_0 . clear ( ) DCNL NUMBER_0 / NUMBER_1", "index": 38}, {"dataset": "django", "model": "nmt", "description": "raise exception", "snippet": "raise", "index": 38}, {"dataset": "docstring", "model": "nmt", "description": "raise exception", "snippet": "DCSP if ( not isinstance ( exception , <unk> ) ) : DCNL DCSP DCSP raise exception . exception . exception . exception .", "index": 38}, {"dataset": "conala", "model": "nmt", "description": "raise exception", "snippet": "canvas . set_position ( 'firstname' )", "index": 38}, {"dataset": "synthetic", "model": "nmt", "description": "raise exception", "snippet": "os . statvfs ( '/' ) for Counter in range ( NUMBER_1 ) ]", "index": 38}, {"dataset": "django", "model": "seekNMT", "description": "raise exception", "snippet": "", "index": 38}, {"dataset": "docstring", "model": "seekNMT", "description": "raise exception", "snippet": "DCSP raise exception . <unk> ( reason = msg )", "index": 38}, {"dataset": "conala", "model": "seekNMT", "description": "raise exception", "snippet": "urllib . request . urlopen ( 'http://www.stackoverflow.com' )", "index": 38}, {"dataset": "synthetic", "model": "seekNMT", "description": "raise exception", "snippet": "False not in [ VARIABLE_0 [ i ] == VARIABLE_0 [ - i - 1 ] for i in range ( len ( VARIABLE_0 ) ) ]", "index": 38}, {"dataset": "human", "model": "1", "description": "return empty dictionary", "snippet": "return { } ", "index": 47}, {"dataset": "human", "model": "2", "description": "return empty dictionary", "snippet": "my_empty_dict = { } ", "index": 47}, {"dataset": "django", "model": "retrieval", "description": "return empty dictionary", "snippet": "return { }", "index": 47}, {"dataset": "docstring", "model": "retrieval", "description": "return empty dictionary", "snippet": "DCSP pass", "index": 47}, {"dataset": "conala", "model": "retrieval", "description": "return empty dictionary", "snippet": "lst [ : ] = [ ]", "index": 47}, {"dataset": "synthetic", "model": "retrieval", "description": "return empty dictionary", "snippet": "LIST_0 . clear ( )", "index": 47}, {"dataset": "django", "model": "nmt", "description": "return empty dictionary", "snippet": "return { }", "index": 47}, {"dataset": "docstring", "model": "nmt", "description": "return empty dictionary", "snippet": "DCSP return { }", "index": 47}, {"dataset": "conala", "model": "nmt", "description": "return empty dictionary", "snippet": "type ( x )", "index": 47}, {"dataset": "synthetic", "model": "nmt", "description": "return empty dictionary", "snippet": "dict ( ) for k in VARIABLE_1 ]", "index": 47}, {"dataset": "django", "model": "seekNMT", "description": "return empty dictionary", "snippet": "return { }", "index": 47}, {"dataset": "docstring", "model": "seekNMT", "description": "return empty dictionary", "snippet": "DCSP return sorted ( keys )", "index": 47}, {"dataset": "conala", "model": "seekNMT", "description": "return empty dictionary", "snippet": "all ( i )", "index": 47}, {"dataset": "synthetic", "model": "seekNMT", "description": "return empty dictionary", "snippet": "result = LIST_0 . clear ( )", "index": 47}, {"dataset": "human", "model": "1", "description": "return list where elements are greater than x", "snippet": "[ elem for elem in l if elem > x ] ", "index": 24}, {"dataset": "human", "model": "2", "description": "return list where elements are greater than x", "snippet": "return [ i for i in my_list if i > x ] ", "index": 24}, {"dataset": "django", "model": "retrieval", "description": "return list where elements are greater than x", "snippet": "elif command . verbosity > 0 :", "index": 24}, {"dataset": "docstring", "model": "retrieval", "description": "return list where elements are greater than x", "snippet": "DCSP if a : DCNL DCSP DCSP if six . PY3 : DCNL DCSP DCSP DCSP if isinstance ( a , bytes ) : DCNL DCSP DCSP DCSP DCSP a = a . decode ( u'ascii' ) DCNL DCSP DCSP DCSP if isinstance ( b , bytes ) : DCNL DCSP DCSP DCSP DCSP b = b . decode ( u'ascii' ) DCNL DCSP DCSP a = distutils . version . LooseVersion ( a ) DCNL DCSP DCSP b = distutils . version . LooseVersion ( b ) DCNL DCSP DCSP return ( a >= b ) DCNL DCSP else : DCNL DCSP DCSP return False", "index": 24}, {"dataset": "conala", "model": "retrieval", "description": "return list where elements are greater than x", "snippet": "[ i for i in range ( len ( a ) ) if a [ i ] > 2 ]", "index": 24}, {"dataset": "synthetic", "model": "retrieval", "description": "return list where elements are greater than x", "snippet": "return LIST_0 . index ( NUMBER_0 )", "index": 24}, {"dataset": "django", "model": "nmt", "description": "return list where elements are greater than x", "snippet": "return [ x ]", "index": 24}, {"dataset": "docstring", "model": "nmt", "description": "return list where elements are greater than x", "snippet": "DCSP return [ x for x in <unk> if ( x in x ) ]", "index": 24}, {"dataset": "conala", "model": "nmt", "description": "return list where elements are greater than x", "snippet": "[ ( x in list1 if x not in b ]", "index": 24}, {"dataset": "synthetic", "model": "nmt", "description": "return list where elements are greater than x", "snippet": "sorted ( itertools . islice ( l , key = lambda x : x [ 1 ] )", "index": 24}, {"dataset": "django", "model": "seekNMT", "description": "return list where elements are greater than x", "snippet": "bits", "index": 24}, {"dataset": "docstring", "model": "seekNMT", "description": "return list where elements are greater than x", "snippet": "DCSP return list ( map ( int , x ) )", "index": 24}, {"dataset": "conala", "model": "seekNMT", "description": "return list where elements are greater than x", "snippet": "set ( d )", "index": 24}, {"dataset": "synthetic", "model": "seekNMT", "description": "return list where elements are greater than x", "snippet": "return LIST_0 . remove ( NUMBER_0 )", "index": 24}, {"dataset": "human", "model": "1", "description": "run main if script is run from terminal", "snippet": "if __name__ == \"__main__\" : ", "index": 20}, {"dataset": "human", "model": "2", "description": "run main if script is run from terminal", "snippet": "if _name_ == \"_main_\" : ", "index": 20}, {"dataset": "django", "model": "retrieval", "description": "run main if script is run from terminal", "snippet": "def run ( self , 1 __pycache__ data_utils . py lines maskGenerator . sh toFileIf . sh train . code train . desc options ) :", "index": 20}, {"dataset": "docstring", "model": "retrieval", "description": "run main if script is run from terminal", "snippet": "DCSP if ( args is None ) : DCNL DCSP DCSP args = sys . argv [ 1 : ] DCNL DCSP if ( len ( args ) != 2 ) : DCNL DCSP DCSP print ( ( 'USAGE: DCSP %s DCSP BEHAVE_FILE.json DCSP CUCUMBER_FILE.json' % NAME ) ) DCNL DCSP DCSP print ( 'Converts DCSP behave DCSP JSON DCSP dialect DCSP to DCSP cucumber DCSP JSON DCSP dialect.' ) DCNL DCSP DCSP return 1 DCNL DCSP behave_filename = args [ 0 ] DCNL DCSP cucumber_filename = args [ 1 ] DCNL DCSP return convert_behave_to_cucumber_json ( behave_filename , cucumber_filename )", "index": 20}, {"dataset": "conala", "model": "retrieval", "description": "run main if script is run from terminal", "snippet": "os . system ( 'gnome-terminal -e \\'bash -c \"sudo apt-get update; exec bash\"\\'' )", "index": 20}, {"dataset": "synthetic", "model": "retrieval", "description": "run main if script is run from terminal", "snippet": "if __name__ == '__main__' : DCNL", "index": 20}, {"dataset": "django", "model": "nmt", "description": "run main if script is run from terminal", "snippet": "if <unk> in <unk> :", "index": 20}, {"dataset": "docstring", "model": "nmt", "description": "run main if script is run from terminal", "snippet": "DCSP return ( not os . path . join ( sys . argv [ 0 ] , sys", "index": 20}, {"dataset": "conala", "model": "nmt", "description": "run main if script is run from terminal", "snippet": "os . Popen ( [ 'rm' , '-r' , 'some.file' ] )", "index": 20}, {"dataset": "synthetic", "model": "nmt", "description": "run main if script is run from terminal", "snippet": "os . system ( <unk> <unk> <unk> <unk> <unk> )", "index": 20}, {"dataset": "django", "model": "seekNMT", "description": "run main if script is run from terminal", "snippet": "interactive interactive", "index": 20}, {"dataset": "docstring", "model": "seekNMT", "description": "run main if script is run from terminal", "snippet": "DCSP if ( sys . platform . system ( ) != 'Windows' ) : DCNL DCSP DCSP return", "index": 20}, {"dataset": "conala", "model": "seekNMT", "description": "run main if script is run from terminal", "snippet": "app . run ( 2010 , self . CRITICAL )", "index": 20}, {"dataset": "synthetic", "model": "seekNMT", "description": "run main if script is run from terminal", "snippet": "datetime . today ( ) . strftime ( \"%A\" )", "index": 20}, {"dataset": "human", "model": "1", "description": "save `model` to a json", "snippet": "json . dump ( model , file_path ) ", "index": 6}, {"dataset": "human", "model": "2", "description": "save `model` to a json", "snippet": "import json DCNL with open ( 'data.json' , 'w' ) as outfile : DCNL DCSP DCSP json . dump ( data , outfile ) ", "index": 6}, {"dataset": "django", "model": "retrieval", "description": "save `model` to a json", "snippet": "instance . save ( )", "index": 6}, {"dataset": "docstring", "model": "retrieval", "description": "save `model` to a json", "snippet": "DCSP checkpointDir = _getModelCheckpointDir ( experimentDir , checkpointLabel ) DCNL DCSP if newSerialization : DCNL DCSP DCSP model . writeToCheckpoint ( checkpointDir ) DCNL DCSP else : DCNL DCSP DCSP model . save ( saveModelDir = checkpointDir )", "index": 6}, {"dataset": "conala", "model": "retrieval", "description": "save `model` to a json", "snippet": "urllib . request . urlretrieve ( 'http://search.twitter.com/search.json?q=hi' , 'hi.json' )", "index": 6}, {"dataset": "synthetic", "model": "retrieval", "description": "save `model` to a json", "snippet": "VARIABLE_0 + datetime . datetime . timedelta ( days = 7 ) DCNL VARIABLE_1 + datetime . datetime . timedelta ( days = 7 * VARIABLE_0 )", "index": 6}, {"dataset": "django", "model": "nmt", "description": "save `model` to a json", "snippet": "<unk> = <unk>", "index": 6}, {"dataset": "docstring", "model": "nmt", "description": "save `model` to a json", "snippet": "DCSP if isinstance ( ids , list ) : DCNL DCSP DCSP ids = ids . keys (", "index": 6}, {"dataset": "conala", "model": "nmt", "description": "save `model` to a json", "snippet": "foo = [ str ( i ) for i in range ( 100 ) ]", "index": 6}, {"dataset": "synthetic", "model": "nmt", "description": "save `model` to a json", "snippet": "numpy . random . randn ( 100 , df = 'none' )", "index": 6}, {"dataset": "django", "model": "seekNMT", "description": "save `model` to a json", "snippet": "save", "index": 6}, {"dataset": "docstring", "model": "seekNMT", "description": "save `model` to a json", "snippet": "DCSP with pytest . raises ( ValidationError ) : DCNL DCSP DCSP with pytest . raises ( ValidationError", "index": 6}, {"dataset": "conala", "model": "seekNMT", "description": "save `model` to a json", "snippet": "stream = 0 : DCNL DCSP DCSP DCSP DCSP print ( exc )", "index": 6}, {"dataset": "synthetic", "model": "seekNMT", "description": "save `model` to a json", "snippet": "datetime . date . today ( ) + datetime . timedelta ( days = 1 )", "index": 6}, {"dataset": "human", "model": "1", "description": "shuffle array", "snippet": "import random DCNL random . shuffle ( array ) ", "index": 33}, {"dataset": "human", "model": "2", "description": "shuffle array", "snippet": "import random DCNL random . shuffle ( array ) ", "index": 33}, {"dataset": "django", "model": "retrieval", "description": "shuffle array", "snippet": "", "index": 33}, {"dataset": "docstring", "model": "retrieval", "description": "shuffle array", "snippet": "DCSP for i in range ( 0 , len ( arr ) ) : DCNL DCSP DCSP r = randint ( 0 , i ) DCNL DCSP DCSP ( arr [ i ] , arr [ r ] ) = ( arr [ r ] , arr [ i ] )", "index": 33}, {"dataset": "conala", "model": "retrieval", "description": "shuffle array", "snippet": "np . random . shuffle ( np . transpose ( r ) )", "index": 33}, {"dataset": "synthetic", "model": "retrieval", "description": "shuffle array", "snippet": "LIST_0 . clear ( )", "index": 33}, {"dataset": "django", "model": "nmt", "description": "shuffle array", "snippet": "while <unk> :", "index": 33}, {"dataset": "docstring", "model": "nmt", "description": "shuffle array", "snippet": "DCSP return np . prod ( shape )", "index": 33}], "done": [{"dataset": "synthetic", "model": "seekNMT", "description": "wait", "snippet": "False not in [ VARIABLE_0 [ i ] == VARIABLE_0 [ - i - 1 ] for i in range ( len ( VARIABLE_0 ) ) ]", "index": 42, "rank": 1}, {"dataset": "conala", "model": "seekNMT", "description": "wait", "snippet": ". dic [ : , ( None ) ]", "index": 42, "rank": 1}, {"dataset": "docstring", "model": "seekNMT", "description": "wait", "snippet": "DCSP proto = proto . proto proto proto . proto proto proto . proto proto proto . proto proto proto . proto proto proto", "index": 42, "rank": 1}, {"dataset": "django", "model": "seekNMT", "description": "wait", "snippet": "", "index": 42, "rank": 1}, {"dataset": "synthetic", "model": "nmt", "description": "wait", "snippet": "#ERROR!", "index": 42, "rank": 1}, {"dataset": "conala", "model": "nmt", "description": "wait", "snippet": "", "index": 42, "rank": 1}, {"dataset": "docstring", "model": "nmt", "description": "wait", "snippet": "DCSP while True : DCNL DCSP DCSP print ( <unk> DCSP <unk> % ( sys . stdout , stderr ) ) DCNL DCSP DCSP", "index": 42, "rank": 1}, {"dataset": "django", "model": "nmt", "description": "wait", "snippet": "try :", "index": 42, "rank": 1}, {"dataset": "synthetic", "model": "retrieval", "description": "wait", "snippet": "LIST_0 . clear ( ) DCNL NUMBER_0 / NUMBER_1", "index": 42, "rank": 1}, {"dataset": "conala", "model": "retrieval", "description": "wait", "snippet": "p . wait ( )", "index": 42, "rank": 3}, {"dataset": "docstring", "model": "retrieval", "description": "wait", "snippet": "DCSP while ( mpstate . status . exit != True ) : DCNL DCSP DCSP try : DCNL DCSP DCSP DCSP if ( mpstate . status . exit != True ) : DCNL DCSP DCSP DCSP DCSP line = raw_input ( mpstate . rl . prompt ) DCNL DCSP DCSP except EOFError : DCNL DCSP DCSP DCSP mpstate . status . exit = True DCNL DCSP DCSP DCSP sys . exit ( 1 ) DCNL DCSP DCSP mpstate . input_queue . put ( line )", "index": 42, "rank": 1}, {"dataset": "django", "model": "retrieval", "description": "wait", "snippet": "", "index": 42, "rank": 1}, {"dataset": "human", "model": "2", "description": "wait", "snippet": "import time DCNL time . sleep ( 1 ) ", "index": 42, "rank": 5}, {"dataset": "human", "model": "1", "description": "wait", "snippet": "import time DCNL time . sleep ( 3 ) ", "index": 42, "rank": 5}, {"dataset": "synthetic", "model": "seekNMT", "description": "stack pop", "snippet": "False not in [ VARIABLE_0 [ i ] == VARIABLE_0 [ - i - 1 ] for i in range ( len ( VARIABLE_0 ) ) ]", "index": 49, "rank": 1}, {"dataset": "conala", "model": "seekNMT", "description": "stack pop", "snippet": ". date ( )", "index": 49, "rank": 1}, {"dataset": "docstring", "model": "seekNMT", "description": "stack pop", "snippet": "DCSP stack = stack stack stack stack stack stack stack stack stack stack stack stack stack stack stack stack stack stack stack stack stack", "index": 49, "rank": 1}, {"dataset": "django", "model": "seekNMT", "description": "stack pop", "snippet": "", "index": 49, "rank": 1}, {"dataset": "synthetic", "model": "nmt", "description": "stack pop", "snippet": ". update ( )", "index": 49, "rank": 1}, {"dataset": "conala", "model": "nmt", "description": "stack pop", "snippet": ". translate ( 'name' , default = 'application/json' )", "index": 49, "rank": 1}, {"dataset": "docstring", "model": "nmt", "description": "stack pop", "snippet": "DCSP return [ ]", "index": 49, "rank": 2}, {"dataset": "django", "model": "nmt", "description": "stack pop", "snippet": "if options [ 5 ] :", "index": 49, "rank": 1}, {"dataset": "synthetic", "model": "retrieval", "description": "stack pop", "snippet": "LIST_0 . clear ( ) DCNL NUMBER_0 / NUMBER_1", "index": 49, "rank": 1}, {"dataset": "conala", "model": "retrieval", "description": "stack pop", "snippet": "pd . concat ( [ GOOG , AAPL ] , keys = [ 'GOOG' , 'AAPL' ] , axis = 1 )", "index": 49, "rank": 1}, {"dataset": "docstring", "model": "retrieval", "description": "stack pop", "snippet": "DCSP mox = Mox ( ) DCNL DCSP old_os = io . os DCNL DCSP io . os = mox . CreateMockAnything ( ) DCNL DCSP class MyFs ( io . FileSystem , ) : DCNL DCSP DCSP stack = [ ] DCNL DCSP mox . ReplayAll ( ) DCNL DCSP try : DCNL DCSP DCSP assert ( len ( MyFs . stack ) is 0 ) DCNL DCSP DCSP MyFs . popd ( ) DCNL DCSP DCSP assert ( len ( MyFs . stack ) is 0 ) DCNL DCSP DCSP assert_equals ( MyFs . stack , [ ] ) DCNL DCSP DCSP mox . VerifyAll ( ) DCNL DCSP finally : DCNL DCSP DCSP io . os = old_os", "index": 49, "rank": 1}, {"dataset": "django", "model": "retrieval", "description": "stack pop", "snippet": "pop = complain", "index": 49, "rank": 2}, {"dataset": "human", "model": "2", "description": "stack pop", "snippet": "my_stack . pop ( ) ", "index": 49, "rank": 4}, {"dataset": "human", "model": "1", "description": "stack pop", "snippet": "s . pop ( ) ", "index": 49, "rank": 5}, {"dataset": "synthetic", "model": "seekNMT", "description": "shuffle array", "snippet": "result = [ item * 2 for item in LIST_0 ]", "index": 33, "rank": 2}, {"dataset": "conala", "model": "seekNMT", "description": "shuffle array", "snippet": "list1", "index": 33, "rank": 1}, {"dataset": "docstring", "model": "seekNMT", "description": "shuffle array", "snippet": "DCSP indices = array ( array ) DCNL DCSP indices = array ( array ) DCNL DCSP indices = array ( array ) DCNL", "index": 33, "rank": 2}, {"dataset": "django", "model": "seekNMT", "description": "shuffle array", "snippet": ":", "index": 33, "rank": 1}, {"dataset": "synthetic", "model": "nmt", "description": "shuffle array", "snippet": "for x in range ( NUMBER_1 ) ]", "index": 33, "rank": 2}, {"dataset": "conala", "model": "nmt", "description": "shuffle array", "snippet": "np . zeros ( ( 6 , dtype . '<U2' ) ) DCNL print ( parsed_html . transpose ( r ) )", "index": 33, "rank": 1}]}